{"ast":null,"code":"var _jsxFileName = \"/Users/sebyboiciuc/Desktop/hackaton/ITFest-MTS/src/components/Home.js\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = ({\n  organ,\n  organs,\n  provider,\n  account,\n  escrow,\n  togglePop,\n  findPatientByCriteria\n}) => {\n  _s();\n  const [donor, setDonor] = useState(null);\n  const [patient, setPatient] = useState(null);\n  const [doctor, setDoctor] = useState(null);\n  const [organId, setOrganId] = useState(null);\n  const [doctorApproved, setDoctorApproved] = useState(false);\n  const [currentOwner, setCurrentOwner] = useState(null);\n  const [futureOwner, setFutureOwner] = useState(null);\n  const [patientSet, setPatientSet] = useState(false);\n\n  // Funcție pentru a prelua detalii despre transplant\n  const fetchDetails = async () => {\n    const donor = await escrow.donor();\n    const doctor = await escrow.doctor();\n    const patient = await escrow.patient();\n    const organId = await escrow.organNFT();\n    const doctorApproved = await escrow.doctorApproved();\n    const owners = await escrow.getOwners();\n    setDonor(donor);\n    setDoctor(doctor);\n    setPatient(patient);\n    setOrganId(organId.toString());\n    setDoctorApproved(doctorApproved);\n    setCurrentOwner(owners[0]);\n    setFutureOwner(owners[1]);\n  };\n  useEffect(() => {\n    const checkIfPatientIsSet = async () => {\n      const isSet = await escrow.isPatientSet();\n      if (!isSet && !patientSet) {\n        const foundPatient = await findPatientByCriteria({\n          bloodType: \"B+\"\n        });\n        if (foundPatient) {\n          console.log(\"🔍 Pacient găsit automat:\", foundPatient);\n          await setPatientHandler(foundPatient.address);\n          setPatientSet(true);\n        } else {\n          console.log(\"⚠️ Niciun pacient potrivit găsit.\");\n        }\n      }\n    };\n    fetchDetails();\n    checkIfPatientIsSet();\n  }, [patientSet]);\n\n  // Funcție pentru a seta adresa pacientului\n  const setPatientHandler = async address => {\n    try {\n      if (!address) {\n        alert(\"Patient address cannot be empty.\");\n        return;\n      }\n      console.log(\"🔹 Setting patient to:\", address);\n      const signer = provider.getSigner();\n      const escrowWithSigner = escrow.connect(signer);\n      const tx = await escrowWithSigner.setPatient(address);\n      await tx.wait();\n      alert(\"Patient address set successfully!\");\n      fetchDetails();\n    } catch (error) {\n      console.error(\"Error setting patient address:\", error);\n      alert(\"Failed to set patient address. Please try again.\");\n    }\n  };\n\n  // Funcție pentru a transfera organul\n  const transferOrganHandler = async () => {\n    try {\n      if (!doctorApproved) {\n        alert(\"Doctor approval is required before transferring the organ.\");\n        return;\n      }\n      const signer = provider.getSigner();\n      const escrowWithSigner = escrow.connect(signer);\n      const tx = await escrowWithSigner.transferOrgan();\n      await tx.wait();\n      setCurrentOwner(futureOwner);\n      setFutureOwner(null);\n      alert(\"Organ transferred successfully!\");\n      fetchDetails();\n    } catch (error) {\n      console.error(\"Error transferring organ:\", error);\n      alert(\"Failed to transfer organ. Please try again.\");\n    }\n  };\n\n  // Funcție pentru ca doctorul să aprobe transplantul\n  const approveTransplantHandler = async () => {\n    try {\n      const signer = provider.getSigner();\n      const escrowWithSigner = escrow.connect(signer);\n      const tx = await escrowWithSigner.approveTransplant();\n      await tx.wait();\n      setDoctorApproved(true);\n      alert(\"Transplant approved successfully!\");\n      fetchDetails();\n    } catch (error) {\n      console.error(\"Error approving transplant:\", error);\n      alert(\"Failed to approve transplant. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed inset-0 bg-black bg-opacity-70 flex items-center justify-center z-50\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white rounded-lg shadow-lg w-11/12 md:w-[800px] p-5 relative\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => togglePop(),\n        className: \"absolute -top-1 right-1 text-2xl text-gray-700 hover:text-red-500\",\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold text-center mb-4\",\n        children: \"Organ Transplant Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Donor:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 12\n        }, this), \" \", donor ? `${donor.slice(0, 6)}...${donor.slice(-4)}` : \"N/A\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Patient:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 12\n        }, this), \" \", patient ? `${patient.slice(0, 6)}...${patient.slice(-4)}` : \"Not assigned yet\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Doctor:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 12\n        }, this), \" \", doctor ? `${doctor.slice(0, 6)}...${doctor.slice(-4)}` : \"N/A\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Organ NFT ID:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 12\n        }, this), \" \", organId ? organId : \"Loading...\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Doctor Approval:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 12\n        }, this), \" \", doctorApproved ? \"✅ Approved\" : \"❌ Not Approved\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Current NFT Owner:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 12\n        }, this), \" \", currentOwner ? `${currentOwner.slice(0, 6)}...${currentOwner.slice(-4)}` : \"Loading...\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Future NFT Owner:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 12\n        }, this), \" \", futureOwner ? `${futureOwner.slice(0, 6)}...${futureOwner.slice(-4)}` : \"Not assigned yet\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-xl font-bold mb-4\",\n          children: \"All Organs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-1 md:grid-cols-2 gap-4\",\n          children: organs.map((organ, index) => {\n            var _organ$attributes, _organ$attributes$fin, _organ$attributes2;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"border rounded-lg p-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: organ.image || \"fallback.jpg\",\n                className: \"w-full h-auto rounded-t-lg\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Organ:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 20\n                }, this), \" \", organ.organ || \"N/A\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Blood Type:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 20\n                }, this), \" \", organ.bloodType || ((_organ$attributes = organ.attributes) === null || _organ$attributes === void 0 ? void 0 : (_organ$attributes$fin = _organ$attributes.find(attr => attr.trait_type === \"Blood Type\")) === null || _organ$attributes$fin === void 0 ? void 0 : _organ$attributes$fin.value) || \"N/A\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Description:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 133,\n                  columnNumber: 20\n                }, this), \" \", organ.description || \"No description\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mt-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Attributes:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                  children: (_organ$attributes2 = organ.attributes) === null || _organ$attributes2 === void 0 ? void 0 : _organ$attributes2.map((attr, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: [attr.trait_type, \": \", attr.value]\n                  }, i, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 138,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 17\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col gap-3 mt-5\",\n        children: [account === doctor && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: approveTransplantHandler,\n          className: \"bg-green-500 text-white p-2 rounded-md\",\n          children: \"Approve Transplant\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this), account === donor && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: transferOrganHandler,\n          className: `p-2 rounded-md ${doctorApproved ? \"bg-red-500 text-white\" : \"bg-gray-400 text-gray-700 cursor-not-allowed\"}`,\n          disabled: !doctorApproved,\n          children: \"Transfer Organ\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"3XWRmPQE4EaaDBdIZRFLr8/mysM=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["Home","organ","organs","provider","account","escrow","togglePop","findPatientByCriteria","_s","donor","setDonor","useState","patient","setPatient","doctor","setDoctor","organId","setOrganId","doctorApproved","setDoctorApproved","currentOwner","setCurrentOwner","futureOwner","setFutureOwner","patientSet","setPatientSet","fetchDetails","organNFT","owners","getOwners","toString","useEffect","checkIfPatientIsSet","isSet","isPatientSet","foundPatient","bloodType","console","log","setPatientHandler","address","alert","signer","getSigner","escrowWithSigner","connect","tx","wait","error","transferOrganHandler","transferOrgan","approveTransplantHandler","approveTransplant","_jsxDEV","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","slice","map","index","_organ$attributes","_organ$attributes$fin","_organ$attributes2","src","image","attributes","find","attr","trait_type","value","description","i","disabled","_c","$RefreshReg$"],"sources":["/Users/sebyboiciuc/Desktop/hackaton/ITFest-MTS/src/components/Home.js"],"sourcesContent":["const Home = ({ organ, organs, provider, account, escrow, togglePop, findPatientByCriteria }) => {\n  const [donor, setDonor] = useState(null);\n  const [patient, setPatient] = useState(null);\n  const [doctor, setDoctor] = useState(null);\n  const [organId, setOrganId] = useState(null);\n  const [doctorApproved, setDoctorApproved] = useState(false);\n  const [currentOwner, setCurrentOwner] = useState(null);\n  const [futureOwner, setFutureOwner] = useState(null);\n  const [patientSet, setPatientSet] = useState(false);\n\n  // Funcție pentru a prelua detalii despre transplant\n  const fetchDetails = async () => {\n    const donor = await escrow.donor();\n    const doctor = await escrow.doctor();\n    const patient = await escrow.patient();\n    const organId = await escrow.organNFT();\n    const doctorApproved = await escrow.doctorApproved();\n    const owners = await escrow.getOwners();\n\n    setDonor(donor);\n    setDoctor(doctor);\n    setPatient(patient);\n    setOrganId(organId.toString());\n    setDoctorApproved(doctorApproved);\n    setCurrentOwner(owners[0]);\n    setFutureOwner(owners[1]);\n  };\n\n  useEffect(() => {\n    const checkIfPatientIsSet = async () => {\n      const isSet = await escrow.isPatientSet();\n      if (!isSet && !patientSet) {\n        const foundPatient = await findPatientByCriteria({ bloodType: \"B+\" });\n        if (foundPatient) {\n          console.log(\"🔍 Pacient găsit automat:\", foundPatient);\n          await setPatientHandler(foundPatient.address);\n          setPatientSet(true);\n        } else {\n          console.log(\"⚠️ Niciun pacient potrivit găsit.\");\n        }\n      }\n    };\n\n    fetchDetails();\n    checkIfPatientIsSet();\n  }, [patientSet]);\n\n  // Funcție pentru a seta adresa pacientului\n  const setPatientHandler = async (address) => {\n    try {\n      if (!address) {\n        alert(\"Patient address cannot be empty.\");\n        return;\n      }\n\n      console.log(\"🔹 Setting patient to:\", address);\n      const signer = provider.getSigner();\n      const escrowWithSigner = escrow.connect(signer);\n      const tx = await escrowWithSigner.setPatient(address);\n      await tx.wait();\n      alert(\"Patient address set successfully!\");\n      fetchDetails();\n    } catch (error) {\n      console.error(\"Error setting patient address:\", error);\n      alert(\"Failed to set patient address. Please try again.\");\n    }\n  };\n\n  // Funcție pentru a transfera organul\n  const transferOrganHandler = async () => {\n    try {\n      if (!doctorApproved) {\n        alert(\"Doctor approval is required before transferring the organ.\");\n        return;\n      }\n\n      const signer = provider.getSigner();\n      const escrowWithSigner = escrow.connect(signer);\n      const tx = await escrowWithSigner.transferOrgan();\n      await tx.wait();\n      setCurrentOwner(futureOwner);\n      setFutureOwner(null);\n      alert(\"Organ transferred successfully!\");\n      fetchDetails();\n    } catch (error) {\n      console.error(\"Error transferring organ:\", error);\n      alert(\"Failed to transfer organ. Please try again.\");\n    }\n  };\n\n  // Funcție pentru ca doctorul să aprobe transplantul\n  const approveTransplantHandler = async () => {\n    try {\n      const signer = provider.getSigner();\n      const escrowWithSigner = escrow.connect(signer);\n      const tx = await escrowWithSigner.approveTransplant();\n      await tx.wait();\n      setDoctorApproved(true);\n      alert(\"Transplant approved successfully!\");\n      fetchDetails();\n    } catch (error) {\n      console.error(\"Error approving transplant:\", error);\n      alert(\"Failed to approve transplant. Please try again.\");\n    }\n  };\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-70 flex items-center justify-center z-50\">\n      <div className=\"bg-white rounded-lg shadow-lg w-11/12 md:w-[800px] p-5 relative\">\n        <button onClick={() => togglePop()} className=\"absolute -top-1 right-1 text-2xl text-gray-700 hover:text-red-500\">\n          &times;\n        </button>\n\n        <h2 className=\"text-2xl font-bold text-center mb-4\">Organ Transplant Details</h2>\n\n        <p><strong>Donor:</strong> {donor ? `${donor.slice(0, 6)}...${donor.slice(-4)}` : \"N/A\"}</p>\n        <p><strong>Patient:</strong> {patient ? `${patient.slice(0, 6)}...${patient.slice(-4)}` : \"Not assigned yet\"}</p>\n        <p><strong>Doctor:</strong> {doctor ? `${doctor.slice(0, 6)}...${doctor.slice(-4)}` : \"N/A\"}</p>\n        <p><strong>Organ NFT ID:</strong> {organId ? organId : \"Loading...\"}</p>\n        <p><strong>Doctor Approval:</strong> {doctorApproved ? \"✅ Approved\" : \"❌ Not Approved\"}</p>\n        <p><strong>Current NFT Owner:</strong> {currentOwner ? `${currentOwner.slice(0, 6)}...${currentOwner.slice(-4)}` : \"Loading...\"}</p>\n        <p><strong>Future NFT Owner:</strong> {futureOwner ? `${futureOwner.slice(0, 6)}...${futureOwner.slice(-4)}` : \"Not assigned yet\"}</p>\n\n        {/* Afișează toate NFT-urile */}\n        <div className=\"mt-5\">\n          <h3 className=\"text-xl font-bold mb-4\">All Organs</h3>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            {organs.map((organ, index) => (\n              <div key={index} className=\"border rounded-lg p-4\">\n                <img src={organ.image || \"fallback.jpg\"} className=\"w-full h-auto rounded-t-lg\" />\n                <p><strong>Organ:</strong> {organ.organ || \"N/A\"}</p>\n                <p><strong>Blood Type:</strong> {organ.bloodType || organ.attributes?.find(attr => attr.trait_type === \"Blood Type\")?.value || \"N/A\"}</p>\n                <p><strong>Description:</strong> {organ.description || \"No description\"}</p>\n                <div className=\"mt-2\">\n                  <strong>Attributes:</strong>\n                  <ul>\n                    {organ.attributes?.map((attr, i) => (\n                      <li key={i}>{attr.trait_type}: {attr.value}</li>\n                    ))}\n                  </ul>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        <div className=\"flex flex-col gap-3 mt-5\">\n          {account === doctor && (\n            <button onClick={approveTransplantHandler} className=\"bg-green-500 text-white p-2 rounded-md\">\n              Approve Transplant\n            </button>\n          )}\n\n          {account === donor && (\n            <button onClick={transferOrganHandler} className={`p-2 rounded-md ${doctorApproved ? \"bg-red-500 text-white\" : \"bg-gray-400 text-gray-700 cursor-not-allowed\"}`} disabled={!doctorApproved}>\n              Transfer Organ\n            </button>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}