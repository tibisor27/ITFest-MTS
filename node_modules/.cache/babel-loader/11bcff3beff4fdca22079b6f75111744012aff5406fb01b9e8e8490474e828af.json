{"ast":null,"code":"var _jsxFileName = \"/Users/sebyboiciuc/Desktop/ITFest-MTS/src/components/AddOrgan.js\",\n  _s = $RefreshSig$();\nimport { uploadToPinata } from \"../utils/pinata\";\nimport { useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport { v4 as uuidv4 } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AddOrgan({\n  organNFT,\n  provider,\n  account,\n  donorAddress\n}) {\n  _s();\n  const [loading, setLoading] = useState(false);\n  console.log(\"‚úÖ donorAddress la ini»õializare:\", donorAddress);\n  const handleAddOrgan = async () => {\n    console.log(\"üîπ Account conectat:\", account);\n    console.log(\"üîπ Donor Address:\", donorAddress);\n    console.log(\"üîπ Verificare egalitate:\", account && donorAddress && account.toLowerCase() === donorAddress.toLowerCase());\n    if (!donorAddress) {\n      console.error(\"‚ùå DonorAddress nu este √ÆncƒÉrcat! VerificƒÉ loadBlockchainData()\");\n      alert(\"Donor address not found!\");\n      return;\n    }\n    console.log(\"organNFT:\", organNFT);\n    console.log(\"provider:\", provider);\n    console.log(\"account:\", account);\n    console.log(\"donorAddress:\", donorAddress);\n    if (!organNFT) {\n      alert(\"Contractul NFT nu este ini»õializat!\");\n      return;\n    }\n    if (!provider) {\n      alert(\"Provider-ul Ethereum nu este √ÆncƒÉrcat!\");\n      return;\n    }\n    if (!account) {\n      alert(\"Wallet-ul nu este conectat!\");\n      return;\n    }\n    if (!donorAddress) {\n      alert(\"Adresa donorului nu a fost √ÆncƒÉrcatƒÉ!\");\n      return;\n    }\n\n    // üõë VerificƒÉm dacƒÉ utilizatorul conectat este donor-ul\n    if (account.toLowerCase() !== donorAddress.toLowerCase()) {\n      alert(\"Numai donor-ul poate mina NFT-uri!\");\n      return;\n    }\n    setLoading(true);\n    const nftData = {\n      organ: \"Plamani\",\n      BloodType: \"A1\",\n      description: \"Test\",\n      image: \"https://ipfs.io/ipfs/bafkreiduadulzcm27f7lo4kgeadyyszk5gbooviueikcydbjbgcearkjia\",\n      id: `${uuidv4()}-${donorAddress}`,\n      // Generare ID unic\n      attributes: [{\n        trait_type: \"test\",\n        value: 20\n      }, {\n        trait_type: \"test1\",\n        value: \"Condo\"\n      }, {\n        trait_type: \"test2\",\n        value: 2\n      }, {\n        trait_type: \"test3\",\n        value: 3\n      }, {\n        trait_type: \"test4\",\n        value: 2200\n      }, {\n        trait_type: \"test5\",\n        value: 2013\n      }]\n    };\n\n    // üîó √éncƒÉrcƒÉm metadata pe Pinata\n    let ipfsUrl;\n    try {\n      ipfsUrl = await uploadToPinata(nftData);\n    } catch (error) {\n      console.error(\"Eroare la √ÆncƒÉrcare pe IPFS:\", error);\n      alert(\"Eroare la √ÆncƒÉrcare pe IPFS!\");\n      setLoading(false);\n      return;\n    }\n    if (!ipfsUrl) {\n      alert(\"√éncƒÉrcarea pe IPFS a e»ôuat!\");\n      setLoading(false);\n      return;\n    }\n    try {\n      // üéØ ConectƒÉm contractul NFT la donor (signer)\n      const signer = provider.getSigner();\n      const organNFTWithSigner = organNFT.connect(signer);\n\n      // üî• Mint NFT ca donor\n      const mintTx = await organNFTWithSigner.mintOrganNFT(ipfsUrl);\n      const receipt = await mintTx.wait();\n      if (receipt.status === 1) {\n        alert(\"NFT mintat cu succes!\");\n      } else {\n        alert(\"Minting-ul a e»ôuat!\");\n      }\n    } catch (error) {\n      console.error(\"Eroare la minting:\", error);\n      alert(\"Minting failed!\");\n    }\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: handleAddOrgan,\n    disabled: loading,\n    className: \"bg-blue-500 text-white p-2 rounded-md mt-3\",\n    children: loading ? \"Minting...\" : \"Add Organ\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n}\n_s(AddOrgan, \"/Rjh5rPqCCqf0XYnTUk9ZNavw3Q=\");\n_c = AddOrgan;\nvar _c;\n$RefreshReg$(_c, \"AddOrgan\");","map":{"version":3,"names":["uploadToPinata","useState","ethers","v4","uuidv4","jsxDEV","_jsxDEV","AddOrgan","organNFT","provider","account","donorAddress","_s","loading","setLoading","console","log","handleAddOrgan","toLowerCase","error","alert","nftData","organ","BloodType","description","image","id","attributes","trait_type","value","ipfsUrl","signer","getSigner","organNFTWithSigner","connect","mintTx","mintOrganNFT","receipt","wait","status","onClick","disabled","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/sebyboiciuc/Desktop/ITFest-MTS/src/components/AddOrgan.js"],"sourcesContent":["import { uploadToPinata } from \"../utils/pinata\";\nimport { useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport { v4 as uuidv4 } from 'uuid';\n\n\nexport default function AddOrgan({ organNFT, provider, account, donorAddress }) {\n  const [loading, setLoading] = useState(false);\n  console.log(\"‚úÖ donorAddress la ini»õializare:\", donorAddress);\n\n  const handleAddOrgan = async () => {\n    console.log(\"üîπ Account conectat:\", account);\nconsole.log(\"üîπ Donor Address:\", donorAddress);\nconsole.log(\"üîπ Verificare egalitate:\", account && donorAddress && account.toLowerCase() === donorAddress.toLowerCase());\n\n    if (!donorAddress) {\n        console.error(\"‚ùå DonorAddress nu este √ÆncƒÉrcat! VerificƒÉ loadBlockchainData()\");\n        alert(\"Donor address not found!\");\n        return;\n    }\n    \n    console.log(\"organNFT:\", organNFT);\n    console.log(\"provider:\", provider);\n    console.log(\"account:\", account);\n    console.log(\"donorAddress:\", donorAddress);\n    if (!organNFT) {\n        alert(\"Contractul NFT nu este ini»õializat!\");\n        return;\n      }\n      if (!provider) {\n        alert(\"Provider-ul Ethereum nu este √ÆncƒÉrcat!\");\n        return;\n      }\n      if (!account) {\n        alert(\"Wallet-ul nu este conectat!\");\n        return;\n      }\n      if (!donorAddress) {\n        alert(\"Adresa donorului nu a fost √ÆncƒÉrcatƒÉ!\");\n        return;\n      }\n      \n\n    // üõë VerificƒÉm dacƒÉ utilizatorul conectat este donor-ul\n    if (account.toLowerCase() !== donorAddress.toLowerCase()) {\n      alert(\"Numai donor-ul poate mina NFT-uri!\");\n      return;\n    }\n\n    setLoading(true);\n\n    const nftData = {\n      organ: \"Plamani\",\n      BloodType: \"A1\",\n      description: \"Test\",\n      image: \"https://ipfs.io/ipfs/bafkreiduadulzcm27f7lo4kgeadyyszk5gbooviueikcydbjbgcearkjia\",\n      id: `${uuidv4()}-${donorAddress}`, // Generare ID unic\n      attributes: [\n        { trait_type: \"test\", value: 20 },\n        { trait_type: \"test1\", value: \"Condo\" },\n        { trait_type: \"test2\", value: 2 },\n        { trait_type: \"test3\", value: 3 },\n        { trait_type: \"test4\", value: 2200 },\n        { trait_type: \"test5\", value: 2013 },\n      ],\n    };\n\n    // üîó √éncƒÉrcƒÉm metadata pe Pinata\n    let ipfsUrl;\n    try {\n      ipfsUrl = await uploadToPinata(nftData);\n    } catch (error) {\n      console.error(\"Eroare la √ÆncƒÉrcare pe IPFS:\", error);\n      alert(\"Eroare la √ÆncƒÉrcare pe IPFS!\");\n      setLoading(false);\n      return;\n    }\n    if (!ipfsUrl) {\n      alert(\"√éncƒÉrcarea pe IPFS a e»ôuat!\");\n      setLoading(false);\n      return;\n    }\n    \n\n    try {\n      // üéØ ConectƒÉm contractul NFT la donor (signer)\n      const signer = provider.getSigner();\n      const organNFTWithSigner = organNFT.connect(signer);\n\n      // üî• Mint NFT ca donor\n      const mintTx = await organNFTWithSigner.mintOrganNFT(ipfsUrl);\n      const receipt = await mintTx.wait();\nif (receipt.status === 1) {\n  alert(\"NFT mintat cu succes!\");\n} else {\n  alert(\"Minting-ul a e»ôuat!\");\n}\n\n    } catch (error) {\n      console.error(\"Eroare la minting:\", error);\n      alert(\"Minting failed!\");\n    }\n\n    setLoading(false);\n  };\n\n  return (\n    <button\n      onClick={handleAddOrgan}\n      disabled={loading}\n      className=\"bg-blue-500 text-white p-2 rounded-md mt-3\"\n    >\n      {loading ? \"Minting...\" : \"Add Organ\"}\n    </button>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}