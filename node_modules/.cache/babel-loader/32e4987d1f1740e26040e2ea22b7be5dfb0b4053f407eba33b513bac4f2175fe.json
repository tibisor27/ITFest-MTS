{"ast":null,"code":"var _jsxFileName = \"/Users/sebyboiciuc/Desktop/hackaton/ITFest-MTS/src/components/Home.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = ({\n  organ,\n  organs,\n  provider,\n  account,\n  escrow,\n  togglePop,\n  findPatientByCriteria\n}) => {\n  _s();\n  const [donors, setDonors] = useState([]);\n  const [patients, setPatients] = useState([]);\n  const [doctors, setDoctors] = useState([]);\n  const [organIds, setOrganIds] = useState([]);\n  const [doctorApproved, setDoctorApproved] = useState([]);\n  const [currentOwners, setCurrentOwners] = useState([]);\n  const [futureOwners, setFutureOwners] = useState([]);\n  const [patientSet, setPatientSet] = useState(false);\n\n  // Funcție pentru a prelua detalii despre toate contractele escrow\n  const fetchDetails = async () => {\n    const details = await Promise.all(escrow.map(async escrowContract => {\n      const donor = await escrowContract.donor();\n      const doctor = await escrowContract.doctor();\n      const patient = await escrowContract.patient();\n      const organId = await escrowContract.organNFT();\n      const doctorApproved = await escrowContract.doctorApproved();\n      const owners = await escrowContract.getOwners();\n      return {\n        donor,\n        doctor,\n        patient,\n        organId: organId.toString(),\n        doctorApproved,\n        currentOwner: owners[0],\n        futureOwner: owners[1]\n      };\n    }));\n    setDonors(details.map(d => d.donor));\n    setDoctors(details.map(d => d.doctor));\n    setPatients(details.map(d => d.patient));\n    setOrganIds(details.map(d => d.organId));\n    setDoctorApproved(details.map(d => d.doctorApproved));\n    setCurrentOwners(details.map(d => d.currentOwner));\n    setFutureOwners(details.map(d => d.futureOwner));\n  };\n  useEffect(() => {\n    fetchDetails();\n  }, [escrow]);\n  useEffect(() => {\n    const checkIfPatientIsSet = async () => {\n      const isSet = await escrow.isPatientSet();\n      if (!isSet && !patientSet) {\n        const foundPatient = await findPatientByCriteria({\n          bloodType: \"B+\"\n        });\n        if (foundPatient) {\n          console.log(\"🔍 Pacient găsit automat:\", foundPatient);\n          await setPatientHandler(foundPatient.address);\n          setPatientSet(true);\n        } else {\n          console.log(\"⚠️ Niciun pacient potrivit găsit.\");\n        }\n      }\n    };\n    fetchDetails();\n    checkIfPatientIsSet();\n  }, [patientSet]);\n\n  // Funcție pentru a seta adresa pacientului\n  const setPatientHandler = async address => {\n    try {\n      if (!address) {\n        alert(\"Patient address cannot be empty.\");\n        return;\n      }\n      console.log(\"🔹 Setting patient to:\", address);\n      const signer = provider.getSigner();\n      const escrowWithSigner = escrow.connect(signer);\n      const tx = await escrowWithSigner.setPatient(address);\n      await tx.wait();\n      alert(\"Patient address set successfully!\");\n      fetchDetails();\n    } catch (error) {\n      console.error(\"Error setting patient address:\", error);\n      alert(\"Failed to set patient address. Please try again.\");\n    }\n  };\n\n  // Funcție pentru a transfera organul\n  const transferOrganHandler = async () => {\n    try {\n      if (!doctorApproved) {\n        alert(\"Doctor approval is required before transferring the organ.\");\n        return;\n      }\n      const signer = provider.getSigner();\n      const escrowWithSigner = escrow.connect(signer);\n      const tx = await escrowWithSigner.transferOrgan();\n      await tx.wait();\n      setCurrentOwner(futureOwner);\n      setFutureOwner(null);\n      alert(\"Organ transferred successfully!\");\n      fetchDetails();\n    } catch (error) {\n      console.error(\"Error transferring organ:\", error);\n      alert(\"Failed to transfer organ. Please try again.\");\n    }\n  };\n\n  // Funcție pentru ca doctorul să aprobe transplantul\n  const approveTransplantHandler = async () => {\n    try {\n      const signer = provider.getSigner();\n      const escrowWithSigner = escrow.connect(signer);\n      const tx = await escrowWithSigner.approveTransplant();\n      await tx.wait();\n      setDoctorApproved(true);\n      alert(\"Transplant approved successfully!\");\n      fetchDetails();\n    } catch (error) {\n      console.error(\"Error approving transplant:\", error);\n      alert(\"Failed to approve transplant. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed inset-0 bg-black bg-opacity-70 flex items-center justify-center z-50\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white rounded-lg shadow-lg w-11/12 md:w-[800px] p-5 relative\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => togglePop(),\n        className: \"absolute -top-1 right-1 text-2xl text-gray-700 hover:text-red-500\",\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold text-center mb-4\",\n        children: \"Organ Transplant Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Donor:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 12\n        }, this), \" \", donor ? `${donor.slice(0, 6)}...${donor.slice(-4)}` : \"N/A\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Patient:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 12\n        }, this), \" \", patient ? `${patient.slice(0, 6)}...${patient.slice(-4)}` : \"Not assigned yet\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Doctor:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 12\n        }, this), \" \", doctor ? `${doctor.slice(0, 6)}...${doctor.slice(-4)}` : \"N/A\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Organ NFT ID:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 12\n        }, this), \" \", organId ? organId : \"Loading...\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Doctor Approval:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 12\n        }, this), \" \", doctorApproved ? \"✅ Approved\" : \"❌ Not Approved\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Current NFT Owner:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 12\n        }, this), \" \", currentOwner ? `${currentOwner.slice(0, 6)}...${currentOwner.slice(-4)}` : \"Loading...\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Future NFT Owner:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 12\n        }, this), \" \", futureOwner ? `${futureOwner.slice(0, 6)}...${futureOwner.slice(-4)}` : \"Not assigned yet\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-xl font-bold mb-4\",\n          children: \"All Organs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-1 md:grid-cols-2 gap-4\",\n          children: organs.map((organ, index) => {\n            var _organ$attributes, _organ$attributes$fin, _organ$attributes2;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"border rounded-lg p-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: organ.image || \"fallback.jpg\",\n                className: \"w-full h-auto rounded-t-lg\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Organ:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 152,\n                  columnNumber: 20\n                }, this), \" \", organ.organ || \"N/A\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Blood Type:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 20\n                }, this), \" \", organ.bloodType || ((_organ$attributes = organ.attributes) === null || _organ$attributes === void 0 ? void 0 : (_organ$attributes$fin = _organ$attributes.find(attr => attr.trait_type === \"Blood Type\")) === null || _organ$attributes$fin === void 0 ? void 0 : _organ$attributes$fin.value) || \"N/A\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Description:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 20\n                }, this), \" \", organ.description || \"No description\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mt-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Attributes:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                  children: (_organ$attributes2 = organ.attributes) === null || _organ$attributes2 === void 0 ? void 0 : _organ$attributes2.map((attr, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: [attr.trait_type, \": \", attr.value]\n                  }, i, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 159,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 157,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 17\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 15\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col gap-3 mt-5\",\n        children: [account === doctor && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: approveTransplantHandler,\n          className: \"bg-green-500 text-white p-2 rounded-md\",\n          children: \"Approve Transplant\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }, this), account === donor && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: transferOrganHandler,\n          className: `p-2 rounded-md ${doctorApproved ? \"bg-red-500 text-white\" : \"bg-gray-400 text-gray-700 cursor-not-allowed\"}`,\n          disabled: !doctorApproved,\n          children: \"Transfer Organ\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"QTLrCmsJuDGcPNkZJLnCB2DmVEc=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","Home","organ","organs","provider","account","escrow","togglePop","findPatientByCriteria","_s","donors","setDonors","patients","setPatients","doctors","setDoctors","organIds","setOrganIds","doctorApproved","setDoctorApproved","currentOwners","setCurrentOwners","futureOwners","setFutureOwners","patientSet","setPatientSet","fetchDetails","details","Promise","all","map","escrowContract","donor","doctor","patient","organId","organNFT","owners","getOwners","toString","currentOwner","futureOwner","d","checkIfPatientIsSet","isSet","isPatientSet","foundPatient","bloodType","console","log","setPatientHandler","address","alert","signer","getSigner","escrowWithSigner","connect","tx","setPatient","wait","error","transferOrganHandler","transferOrgan","setCurrentOwner","setFutureOwner","approveTransplantHandler","approveTransplant","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","slice","index","_organ$attributes","_organ$attributes$fin","_organ$attributes2","src","image","attributes","find","attr","trait_type","value","description","i","disabled","_c","$RefreshReg$"],"sources":["/Users/sebyboiciuc/Desktop/hackaton/ITFest-MTS/src/components/Home.js"],"sourcesContent":["import { useState, useEffect } from 'react';\n\nconst Home = ({ organ, organs, provider, account, escrow, togglePop, findPatientByCriteria }) => {\n  const [donors, setDonors] = useState([]);\n  const [patients, setPatients] = useState([]);\n  const [doctors, setDoctors] = useState([]);\n  const [organIds, setOrganIds] = useState([]);\n  const [doctorApproved, setDoctorApproved] = useState([]);\n  const [currentOwners, setCurrentOwners] = useState([]);\n  const [futureOwners, setFutureOwners] = useState([]);\n  const [patientSet, setPatientSet] = useState(false);\n\n  // Funcție pentru a prelua detalii despre toate contractele escrow\n  const fetchDetails = async () => {\n    const details = await Promise.all(\n      escrow.map(async (escrowContract) => {\n        const donor = await escrowContract.donor();\n        const doctor = await escrowContract.doctor();\n        const patient = await escrowContract.patient();\n        const organId = await escrowContract.organNFT();\n        const doctorApproved = await escrowContract.doctorApproved();\n        const owners = await escrowContract.getOwners();\n\n        return {\n          donor,\n          doctor,\n          patient,\n          organId: organId.toString(),\n          doctorApproved,\n          currentOwner: owners[0],\n          futureOwner: owners[1],\n        };\n      })\n    );\n\n    setDonors(details.map(d => d.donor));\n    setDoctors(details.map(d => d.doctor));\n    setPatients(details.map(d => d.patient));\n    setOrganIds(details.map(d => d.organId));\n    setDoctorApproved(details.map(d => d.doctorApproved));\n    setCurrentOwners(details.map(d => d.currentOwner));\n    setFutureOwners(details.map(d => d.futureOwner));\n  };\n\n  useEffect(() => {\n    fetchDetails();\n  }, [escrow]);\n\n\n  useEffect(() => {\n    const checkIfPatientIsSet = async () => {\n      const isSet = await escrow.isPatientSet();\n      if (!isSet && !patientSet) {\n        const foundPatient = await findPatientByCriteria({ bloodType: \"B+\" });\n        if (foundPatient) {\n          console.log(\"🔍 Pacient găsit automat:\", foundPatient);\n          await setPatientHandler(foundPatient.address);\n          setPatientSet(true);\n        } else {\n          console.log(\"⚠️ Niciun pacient potrivit găsit.\");\n        }\n      }\n    };\n\n    fetchDetails();\n    checkIfPatientIsSet();\n  }, [patientSet]);\n\n  // Funcție pentru a seta adresa pacientului\n  const setPatientHandler = async (address) => {\n    try {\n      if (!address) {\n        alert(\"Patient address cannot be empty.\");\n        return;\n      }\n\n      console.log(\"🔹 Setting patient to:\", address);\n      const signer = provider.getSigner();\n      const escrowWithSigner = escrow.connect(signer);\n      const tx = await escrowWithSigner.setPatient(address);\n      await tx.wait();\n      alert(\"Patient address set successfully!\");\n      fetchDetails();\n    } catch (error) {\n      console.error(\"Error setting patient address:\", error);\n      alert(\"Failed to set patient address. Please try again.\");\n    }\n  };\n\n  // Funcție pentru a transfera organul\n  const transferOrganHandler = async () => {\n    try {\n      if (!doctorApproved) {\n        alert(\"Doctor approval is required before transferring the organ.\");\n        return;\n      }\n\n      const signer = provider.getSigner();\n      const escrowWithSigner = escrow.connect(signer);\n      const tx = await escrowWithSigner.transferOrgan();\n      await tx.wait();\n      setCurrentOwner(futureOwner);\n      setFutureOwner(null);\n      alert(\"Organ transferred successfully!\");\n      fetchDetails();\n    } catch (error) {\n      console.error(\"Error transferring organ:\", error);\n      alert(\"Failed to transfer organ. Please try again.\");\n    }\n  };\n\n  // Funcție pentru ca doctorul să aprobe transplantul\n  const approveTransplantHandler = async () => {\n    try {\n      const signer = provider.getSigner();\n      const escrowWithSigner = escrow.connect(signer);\n      const tx = await escrowWithSigner.approveTransplant();\n      await tx.wait();\n      setDoctorApproved(true);\n      alert(\"Transplant approved successfully!\");\n      fetchDetails();\n    } catch (error) {\n      console.error(\"Error approving transplant:\", error);\n      alert(\"Failed to approve transplant. Please try again.\");\n    }\n  };\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-70 flex items-center justify-center z-50\">\n      <div className=\"bg-white rounded-lg shadow-lg w-11/12 md:w-[800px] p-5 relative\">\n        <button onClick={() => togglePop()} className=\"absolute -top-1 right-1 text-2xl text-gray-700 hover:text-red-500\">\n          &times;\n        </button>\n\n        <h2 className=\"text-2xl font-bold text-center mb-4\">Organ Transplant Details</h2>\n\n        <p><strong>Donor:</strong> {donor ? `${donor.slice(0, 6)}...${donor.slice(-4)}` : \"N/A\"}</p>\n        <p><strong>Patient:</strong> {patient ? `${patient.slice(0, 6)}...${patient.slice(-4)}` : \"Not assigned yet\"}</p>\n        <p><strong>Doctor:</strong> {doctor ? `${doctor.slice(0, 6)}...${doctor.slice(-4)}` : \"N/A\"}</p>\n        <p><strong>Organ NFT ID:</strong> {organId ? organId : \"Loading...\"}</p>\n        <p><strong>Doctor Approval:</strong> {doctorApproved ? \"✅ Approved\" : \"❌ Not Approved\"}</p>\n        <p><strong>Current NFT Owner:</strong> {currentOwner ? `${currentOwner.slice(0, 6)}...${currentOwner.slice(-4)}` : \"Loading...\"}</p>\n        <p><strong>Future NFT Owner:</strong> {futureOwner ? `${futureOwner.slice(0, 6)}...${futureOwner.slice(-4)}` : \"Not assigned yet\"}</p>\n\n        {/* Afișează toate NFT-urile */}\n        <div className=\"mt-5\">\n          <h3 className=\"text-xl font-bold mb-4\">All Organs</h3>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            {organs.map((organ, index) => (\n              <div key={index} className=\"border rounded-lg p-4\">\n                <img src={organ.image || \"fallback.jpg\"} className=\"w-full h-auto rounded-t-lg\" />\n                <p><strong>Organ:</strong> {organ.organ || \"N/A\"}</p>\n                <p><strong>Blood Type:</strong> {organ.bloodType || organ.attributes?.find(attr => attr.trait_type === \"Blood Type\")?.value || \"N/A\"}</p>\n                <p><strong>Description:</strong> {organ.description || \"No description\"}</p>\n                <div className=\"mt-2\">\n                  <strong>Attributes:</strong>\n                  <ul>\n                    {organ.attributes?.map((attr, i) => (\n                      <li key={i}>{attr.trait_type}: {attr.value}</li>\n                    ))}\n                  </ul>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        <div className=\"flex flex-col gap-3 mt-5\">\n          {account === doctor && (\n            <button onClick={approveTransplantHandler} className=\"bg-green-500 text-white p-2 rounded-md\">\n              Approve Transplant\n            </button>\n          )}\n\n          {account === donor && (\n            <button onClick={transferOrganHandler} className={`p-2 rounded-md ${doctorApproved ? \"bg-red-500 text-white\" : \"bg-gray-400 text-gray-700 cursor-not-allowed\"}`} disabled={!doctorApproved}>\n              Transfer Organ\n            </button>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}