{"ast":null,"code":"var _jsxFileName = \"/Users/sebyboiciuc/Desktop/ITFest-MTS/src/components/Home.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home({\n  organNFT\n}) {\n  _s();\n  const [nfts, setNfts] = useState([]);\n  const fetchNFTs = async () => {\n    if (!organNFT) return;\n    try {\n      const totalSupply = await organNFT.totalSupply();\n      const nftList = [];\n      for (let i = 0; i < totalSupply; i++) {\n        const tokenURI = await organNFT.tokenURI(i);\n        const response = await fetch(tokenURI);\n        const metadata = await response.json();\n        nftList.push(metadata);\n      }\n      setNfts(nftList);\n    } catch (error) {\n      console.error(\"Eroare la preluarea NFT-urilor:\", error);\n    }\n  };\n  useEffect(() => {\n    fetchNFTs();\n  }, [organNFT]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4 border rounded-md shadow-md\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-bold mb-4\",\n      children: \"Organ NFTs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), nfts.length > 0 ? nfts.map((nft, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-2 border rounded mb-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Organ:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 16\n        }, this), \" \", nft.organ]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Blood Type:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 16\n        }, this), \" \", nft.bloodType]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Description:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 16\n        }, this), \" \", nft.description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: nft.image,\n        alt: \"Organ\",\n        className: \"w-32 h-32 object-cover mt-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"IPFS:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 16\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: nft.id,\n          target: \"_blank\",\n          children: \"View on IPFS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 39\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No NFTs found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"WoQOxielu1Zw1vsEZjYoUHnckyk=\");\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","Home","organNFT","_s","nfts","setNfts","fetchNFTs","totalSupply","nftList","i","tokenURI","response","fetch","metadata","json","push","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","nft","index","organ","bloodType","description","src","image","alt","href","id","target","_c","$RefreshReg$"],"sources":["/Users/sebyboiciuc/Desktop/ITFest-MTS/src/components/Home.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\nexport default function Home({ organNFT }) {\n  const [nfts, setNfts] = useState([]);\n\n  const fetchNFTs = async () => {\n    if (!organNFT) return;\n\n    try {\n      const totalSupply = await organNFT.totalSupply();\n      const nftList = [];\n\n      for (let i = 0; i < totalSupply; i++) {\n        const tokenURI = await organNFT.tokenURI(i);\n        const response = await fetch(tokenURI);\n        const metadata = await response.json();\n        nftList.push(metadata);\n      }\n\n      setNfts(nftList);\n    } catch (error) {\n      console.error(\"Eroare la preluarea NFT-urilor:\", error);\n    }\n  };\n\n  useEffect(() => {\n    fetchNFTs();\n  }, [organNFT]);\n\n  return (\n    <div className=\"p-4 border rounded-md shadow-md\">\n      <h2 className=\"text-xl font-bold mb-4\">Organ NFTs</h2>\n      {nfts.length > 0 ? (\n        nfts.map((nft, index) => (\n          <div key={index} className=\"p-2 border rounded mb-2\">\n            <p><strong>Organ:</strong> {nft.organ}</p>\n            <p><strong>Blood Type:</strong> {nft.bloodType}</p>\n            <p><strong>Description:</strong> {nft.description}</p>\n            <img src={nft.image} alt=\"Organ\" className=\"w-32 h-32 object-cover mt-2\" />\n            <p><strong>IPFS:</strong> <a href={nft.id} target=\"_blank\">View on IPFS</a></p>\n          </div>\n        ))\n      ) : (\n        <p>No NFTs found.</p>\n      )}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}