{"ast":null,"code":"var _jsxFileName = \"/Users/sebyboiciuc/Desktop/hackaton/ITFest-MTS/src/components/Home.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = ({\n  organ,\n  provider,\n  account,\n  escrow,\n  togglePop,\n  organs,\n  findPatientByCriteria,\n  foundPatient\n}) => {\n  _s();\n  var _organ$attributes, _organ$attributes$fin, _organ$attributes2;\n  const [donor, setDonor] = useState(null);\n  const [donor2, setDonor2] = useState(null);\n  const [patient, setPatient] = useState(null);\n  const [doctor, setDoctor] = useState(null);\n  const [organId, setOrganId] = useState(null);\n  const [doctorApproved, setDoctorApproved] = useState(false);\n  const [currentOwner, setCurrentOwner] = useState(null);\n  const [futureOwner, setFutureOwner] = useState(null);\n  const [patientSet, setPatientSet] = useState(false); // Stare pentru a verifica dacƒÉ pacientul a fost setat\n\n  // Func»õie pentru a prelua detalii despre transplant\n  const fetchDetails = async () => {\n    const donor = await escrow.donor();\n    const donor2 = await escrow2.donor2();\n    const doctor = await escrow.doctor();\n    const patient = await escrow.patient();\n    const organId = await escrow.organNFT();\n    const doctorApproved = await escrow.doctorApproved();\n    const owners = await escrow.getOwners();\n    setDonor(donor);\n    setDonor2(donor2);\n    setDoctor(doctor);\n    setPatient(patient);\n    setOrganId(organId.toString());\n    setDoctorApproved(doctorApproved);\n    setCurrentOwner(owners[0]);\n    setFutureOwner(owners[1]);\n  };\n  useEffect(() => {\n    const checkIfPatientIsSet = async () => {\n      const isSet = await escrow.isPatientSet();\n      if (!isSet && !patientSet) {\n        // DacƒÉ pacientul nu a fost setat √Æn contract »ôi nici √Æn starea localƒÉ\n        const foundPatient = await findPatientByCriteria({\n          bloodType: \"B+\"\n        });\n        if (foundPatient) {\n          console.log(\"üîç Pacient gƒÉsit automat:\", foundPatient);\n          await setPatientHandler(foundPatient.address);\n          setPatientSet(true); // MarcheazƒÉ cƒÉ pacientul a fost setat\n        } else {\n          console.log(\"‚ö†Ô∏è Niciun pacient potrivit gƒÉsit.\");\n        }\n      }\n    };\n    fetchDetails(); // √éncarcƒÉ detaliile ini»õiale\n    checkIfPatientIsSet();\n  }, [patientSet]); // AdaugƒÉ `patientSet` ca dependen»õƒÉ\n\n  // Func»õie pentru a seta adresa pacientului\n  const setPatientHandler = async address => {\n    try {\n      if (!address) {\n        alert(\"Patient address cannot be empty.\");\n        return;\n      }\n      console.log(\"üîπ Setting patient to:\", address); // Log nou\n\n      const signer = provider.getSigner(); // Ob»õine semnatarul de la provider\n      const escrowWithSigner = escrow.connect(signer); // ConecteazƒÉ semnatarul la contract\n\n      // ApeleazƒÉ func»õia contractului pentru a seta pacientul\n      const tx = await escrowWithSigner.setPatient(address);\n      await tx.wait(); // A»ôteaptƒÉ confirmarea tranzac»õiei\n\n      alert(\"Patient address set successfully!\");\n      fetchDetails(); // Refresh details after setting the patient\n    } catch (error) {\n      console.error(\"Error setting patient address:\", error);\n      alert(\"Failed to set patient address. Please try again.\");\n    }\n  };\n\n  // Func»õie pentru a transfera organul\n  const transferOrganHandler = async () => {\n    try {\n      if (!doctorApproved) {\n        alert(\"Doctor approval is required before transferring the organ.\");\n        return;\n      }\n      const signer = provider.getSigner();\n      const escrowWithSigner = escrow.connect(signer);\n\n      // üè¶ ApeleazƒÉ contractul pentru a transfera organul\n      const tx = await escrowWithSigner.transferOrgan();\n      await tx.wait();\n      setCurrentOwner(futureOwner); // SetƒÉm noul proprietar pe moment\n      setFutureOwner(null); // EliminƒÉm viitorul proprietar temporar\n      alert(\"Organ transferred successfully!\");\n      fetchDetails(); // üîÑ Re√ÆmprospƒÉtƒÉm datele oficiale dupƒÉ confirmare\n    } catch (error) {\n      console.error(\"Error transferring organ:\", error);\n      alert(\"Failed to transfer organ. Please try again.\");\n    }\n  };\n\n  // Func»õie pentru ca doctorul sƒÉ aprobe transplantul\n  const approveTransplantHandler = async () => {\n    try {\n      const signer = provider.getSigner();\n      const escrowWithSigner = escrow.connect(signer);\n\n      // ApeleazƒÉ func»õia contractului pentru a aproba transplantul\n      const tx = await escrowWithSigner.approveTransplant();\n      await tx.wait();\n\n      // ActualizƒÉm instant UI ca sƒÉ parƒÉ cƒÉ s-a aprobat deja\n      setDoctorApproved(true);\n      alert(\"Transplant approved successfully!\");\n      fetchDetails(); // Re√ÆmprospƒÉtƒÉm datele oficiale\n    } catch (error) {\n      console.error(\"Error approving transplant:\", error);\n      alert(\"Failed to approve transplant. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed inset-0 bg-black bg-opacity-70 flex items-center justify-center z-50\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white rounded-lg shadow-lg w-11/12 md:w-[800px] p-5 relative\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => togglePop(),\n        className: \"absolute -top-1 right-1 text-2xl text-gray-700 hover:text-red-500\",\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold text-center mb-4\",\n        children: \"Organ Transplant Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Donor:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 12\n        }, this), \" \", donor2 ? `${donor.slice(0, 6)}...${donor.slice(-4)}` : \"N/A\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Patient:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 12\n        }, this), \" \", patient ? `${patient.slice(0, 6)}...${patient.slice(-4)}` : \"Not assigned yet\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Doctor:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 12\n        }, this), \" \", doctor ? `${doctor.slice(0, 6)}...${doctor.slice(-4)}` : \"N/A\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Organ NFT ID:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 12\n        }, this), \" \", organId ? organId : \"Loading...\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Doctor Approval:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 12\n        }, this), \" \", doctorApproved ? \"‚úÖ Approved\" : \"‚ùå Not Approved\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Current NFT Owner:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 12\n        }, this), \" \", currentOwner ? `${currentOwner.slice(0, 6)}...${currentOwner.slice(-4)}` : \"Loading...\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Future NFT Owner:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 12\n        }, this), \" \", futureOwner ? `${futureOwner.slice(0, 6)}...${futureOwner.slice(-4)}` : \"Not assigned yet\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), organ &&\n      /*#__PURE__*/\n      // ‚úÖ Acum organul este primit corect »ôi folosit\n      _jsxDEV(\"div\", {\n        className: \"mt-5 flex\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-xl font-bold\",\n          children: \"Organ Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: organ.image || \"fallback.jpg\",\n          className: \"w-[350px] h-auto rounded-t-lg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Organ:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 16\n          }, this), \" \", organ.organ || \"N/A\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Blood Type:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 16\n          }, this), \" \", organ.bloodType || ((_organ$attributes = organ.attributes) === null || _organ$attributes === void 0 ? void 0 : (_organ$attributes$fin = _organ$attributes.find(attr => attr.trait_type === \"Blood Type\")) === null || _organ$attributes$fin === void 0 ? void 0 : _organ$attributes$fin.value) || \"N/A\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Description:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 16\n          }, this), \" \", organ.description || \"No description\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-2 flex\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Attributes:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: (_organ$attributes2 = organ.attributes) === null || _organ$attributes2 === void 0 ? void 0 : _organ$attributes2.map((attr, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [attr.trait_type, \": \", attr.value]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col gap-3 mt-5\",\n        children: [account === doctor && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: approveTransplantHandler,\n          className: \"bg-green-500 text-white p-2 rounded-md\",\n          children: \"Approve Transplant\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this), account === donor && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: transferOrganHandler,\n          className: `p-2 rounded-md ${doctorApproved ? \"bg-red-500 text-white\" : \"bg-gray-400 text-gray-700 cursor-not-allowed\"}`,\n          disabled: !doctorApproved,\n          children: \"Transfer Organ\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"oFOO36G2WAMZBQYrbwaoRThgeC4=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","Home","organ","provider","account","escrow","togglePop","organs","findPatientByCriteria","foundPatient","_s","_organ$attributes","_organ$attributes$fin","_organ$attributes2","donor","setDonor","donor2","setDonor2","patient","setPatient","doctor","setDoctor","organId","setOrganId","doctorApproved","setDoctorApproved","currentOwner","setCurrentOwner","futureOwner","setFutureOwner","patientSet","setPatientSet","fetchDetails","escrow2","organNFT","owners","getOwners","toString","checkIfPatientIsSet","isSet","isPatientSet","bloodType","console","log","setPatientHandler","address","alert","signer","getSigner","escrowWithSigner","connect","tx","wait","error","transferOrganHandler","transferOrgan","approveTransplantHandler","approveTransplant","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","slice","src","image","attributes","find","attr","trait_type","value","description","map","i","disabled","_c","$RefreshReg$"],"sources":["/Users/sebyboiciuc/Desktop/hackaton/ITFest-MTS/src/components/Home.js"],"sourcesContent":["import { useState, useEffect } from 'react';\n\nconst Home = ({ organ, provider, account, escrow, togglePop, organs, findPatientByCriteria, foundPatient }) => {\n  const [donor, setDonor] = useState(null);\n  const [donor2, setDonor2] = useState(null);\n  const [patient, setPatient] = useState(null);\n  const [doctor, setDoctor] = useState(null);\n  const [organId, setOrganId] = useState(null);\n  const [doctorApproved, setDoctorApproved] = useState(false);\n  const [currentOwner, setCurrentOwner] = useState(null);\n  const [futureOwner, setFutureOwner] = useState(null);\n  const [patientSet, setPatientSet] = useState(false); // Stare pentru a verifica dacƒÉ pacientul a fost setat\n\n\n\n  // Func»õie pentru a prelua detalii despre transplant\n  const fetchDetails = async () => {\n    const donor = await escrow.donor();\n    const donor2 = await escrow2.donor2();\n    const doctor = await escrow.doctor();\n    const patient = await escrow.patient();\n    const organId = await escrow.organNFT();\n    const doctorApproved = await escrow.doctorApproved();\n\n    const owners = await escrow.getOwners();\n\n    setDonor(donor);\n    setDonor2(donor2);\n    setDoctor(doctor);\n    setPatient(patient);\n    setOrganId(organId.toString());\n    setDoctorApproved(doctorApproved);\n    setCurrentOwner(owners[0]);\n    setFutureOwner(owners[1]);\n\n  };\n\n  useEffect(() => {\n    const checkIfPatientIsSet = async () => {\n      const isSet = await escrow.isPatientSet();\n      if (!isSet && !patientSet) { // DacƒÉ pacientul nu a fost setat √Æn contract »ôi nici √Æn starea localƒÉ\n        const foundPatient = await findPatientByCriteria({ bloodType: \"B+\" });\n  \n        if (foundPatient) {\n          console.log(\"üîç Pacient gƒÉsit automat:\", foundPatient);\n          await setPatientHandler(foundPatient.address);\n          setPatientSet(true); // MarcheazƒÉ cƒÉ pacientul a fost setat\n        } else {\n          console.log(\"‚ö†Ô∏è Niciun pacient potrivit gƒÉsit.\");\n        }\n      }\n    };\n  \n    fetchDetails(); // √éncarcƒÉ detaliile ini»õiale\n    checkIfPatientIsSet();\n  }, [patientSet]); // AdaugƒÉ `patientSet` ca dependen»õƒÉ\n  \n\n  // Func»õie pentru a seta adresa pacientului\n  const setPatientHandler = async (address) => {\n    try {\n        if (!address) {\n            alert(\"Patient address cannot be empty.\");\n            return;\n        }\n\n        console.log(\"üîπ Setting patient to:\", address); // Log nou\n\n        const signer = provider.getSigner(); // Ob»õine semnatarul de la provider\n        const escrowWithSigner = escrow.connect(signer); // ConecteazƒÉ semnatarul la contract\n\n        // ApeleazƒÉ func»õia contractului pentru a seta pacientul\n        const tx = await escrowWithSigner.setPatient(address);\n        await tx.wait();  // A»ôteaptƒÉ confirmarea tranzac»õiei\n\n        alert(\"Patient address set successfully!\");\n        fetchDetails(); // Refresh details after setting the patient\n    } catch (error) {\n        console.error(\"Error setting patient address:\", error);\n        alert(\"Failed to set patient address. Please try again.\");\n    }\n};\n\n\n\n  // Func»õie pentru a transfera organul\n  const transferOrganHandler = async () => {\n    try {\n        if (!doctorApproved) {\n            alert(\"Doctor approval is required before transferring the organ.\");\n            return;\n        }\n\n        const signer = provider.getSigner();\n        const escrowWithSigner = escrow.connect(signer);\n\n\n        // üè¶ ApeleazƒÉ contractul pentru a transfera organul\n        const tx = await escrowWithSigner.transferOrgan();\n        await tx.wait(); \n\n        setCurrentOwner(futureOwner); // SetƒÉm noul proprietar pe moment\n        setFutureOwner(null); // EliminƒÉm viitorul proprietar temporar\n        alert(\"Organ transferred successfully!\");\n\n        fetchDetails(); // üîÑ Re√ÆmprospƒÉtƒÉm datele oficiale dupƒÉ confirmare\n    } catch (error) {\n        console.error(\"Error transferring organ:\", error);\n        alert(\"Failed to transfer organ. Please try again.\");\n    }\n};\n\n\n  // Func»õie pentru ca doctorul sƒÉ aprobe transplantul\n  const approveTransplantHandler = async () => {\n    try {\n        const signer = provider.getSigner();\n        const escrowWithSigner = escrow.connect(signer);\n\n\n        // ApeleazƒÉ func»õia contractului pentru a aproba transplantul\n        const tx = await escrowWithSigner.approveTransplant();\n        await tx.wait();\n        \n        // ActualizƒÉm instant UI ca sƒÉ parƒÉ cƒÉ s-a aprobat deja\n        setDoctorApproved(true);\n\n        alert(\"Transplant approved successfully!\");\n        fetchDetails(); // Re√ÆmprospƒÉtƒÉm datele oficiale\n    } catch (error) {\n        console.error(\"Error approving transplant:\", error);\n        alert(\"Failed to approve transplant. Please try again.\");\n    }\n};\n\n\n\n  \n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-70 flex items-center justify-center z-50\">\n      <div className=\"bg-white rounded-lg shadow-lg w-11/12 md:w-[800px] p-5 relative\">\n        <button onClick={() => togglePop()} className=\"absolute -top-1 right-1 text-2xl text-gray-700 hover:text-red-500\">\n          &times;\n        </button>\n\n        <h2 className=\"text-2xl font-bold text-center mb-4\">Organ Transplant Details</h2>\n\n        <p><strong>Donor:</strong> {donor2 ? `${donor.slice(0, 6)}...${donor.slice(-4)}` : \"N/A\"}</p>\n        <p><strong>Patient:</strong> {patient ? `${patient.slice(0, 6)}...${patient.slice(-4)}` : \"Not assigned yet\"}</p>\n        <p><strong>Doctor:</strong> {doctor ? `${doctor.slice(0, 6)}...${doctor.slice(-4)}` : \"N/A\"}</p>\n        <p><strong>Organ NFT ID:</strong> {organId ? organId : \"Loading...\"}</p>\n        <p><strong>Doctor Approval:</strong> {doctorApproved ? \"‚úÖ Approved\" : \"‚ùå Not Approved\"}</p>\n        <p><strong>Current NFT Owner:</strong> {currentOwner ? `${currentOwner.slice(0, 6)}...${currentOwner.slice(-4)}` : \"Loading...\"}</p>\n        <p><strong>Future NFT Owner:</strong> {futureOwner ? `${futureOwner.slice(0, 6)}...${futureOwner.slice(-4)}` : \"Not assigned yet\"}</p>\n      {/* üî• Afi»ôeazƒÉ »ôi datele despre NFT */}\n      {organ && (  // ‚úÖ Acum organul este primit corect »ôi folosit\n          <div className=\"mt-5 flex\">\n            <h3 className=\"text-xl font-bold\">Organ Details</h3>\n            <img src={organ.image || \"fallback.jpg\"} className=\"w-[350px] h-auto rounded-t-lg\" />\n            <p><strong>Organ:</strong> {organ.organ || \"N/A\"}</p>\n            <p><strong>Blood Type:</strong> {organ.bloodType || organ.attributes?.find(attr => attr.trait_type === \"Blood Type\")?.value || \"N/A\"}</p>\n\n            <p><strong>Description:</strong> {organ.description || \"No description\"}</p>\n            {/* Afi»ôeazƒÉ toate atributele disponibile */}\n            <div className=\"mt-2 flex\">\n              <strong>Attributes:</strong>\n              <ul>\n              {organ.attributes?.map((attr, i) => (\n                  <li key={i}>{attr.trait_type}: {attr.value}</li>\n                ))}\n              </ul>\n            </div>\n          </div>\n        )}\n        <div className=\"flex flex-col gap-3 mt-5\">\n          {/* {account === donor && (\n            <button onClick={() => setPatientHandler(prompt(\"Enter patient's address:\"))}\n              className=\"bg-blue-500 text-white p-2 rounded-md\">\n              Set Patient\n            </button>\n          )} */}\n\n          {account === doctor && (\n            <button onClick={approveTransplantHandler}\n              className=\"bg-green-500 text-white p-2 rounded-md\">\n              Approve Transplant\n            </button>\n          )}\n\n          {account === donor && (\n            <button onClick={transferOrganHandler}\n              className={`p-2 rounded-md ${doctorApproved ? \"bg-red-500 text-white\" : \"bg-gray-400 text-gray-700 cursor-not-allowed\"}`}\n              disabled={!doctorApproved}>\n              Transfer Organ\n            </button>\n          )}\n\n          \n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}