{"ast":null,"code":"var _jsxFileName = \"/Users/sebyboiciuc/Desktop/ITFest-MTS/src/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { ethers } from \"ethers\"; // AsigurƒÉ-te cƒÉ folose»ôti v5 corect instalat\nimport logo from \"./assets/logo1.png\";\n\n// ABIs\nimport OrganNFT from \"./abis/OrganNFT.json\";\nimport OrganEscrow from \"./abis/OrganEscrow.json\";\nimport WaitingList from \"./abis/WaitingList.json\";\nimport PatientRegistry from './abis/PatientRegistry.json';\n\n// Config\nimport config from \"./config.json\";\nimport Navigation from \"./components/Navigation\";\nimport Search from \"./components/Search\";\nimport Home from \"./components/Home\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [account, setAccount] = useState(null);\n  const [provider, setProvider] = useState(null);\n  const [organNFT, setOrganNFT] = useState(null);\n  const [waitingList, setWaitingList] = useState(null);\n  const [escrow, setEscrow] = useState(null);\n  const [organs, setOrgans] = useState([]);\n  const [organ, setOrgan] = useState([]);\n  const [toggle, setToggle] = useState(false);\n  const [patientRegistry, setPatientRegistry] = useState(null);\n  const [patients, setPatients] = useState([]); // Lista pacien»õilor adƒÉuga»õi\n\n  const loadBlockchainData = async () => {\n    console.log(\"üöÄ loadBlockchainData called!\");\n    if (!window.ethereum) {\n      console.error(\"‚ùå MetaMask nu este instalat!\");\n      return;\n    }\n    console.log(\"‚úÖ MetaMask gƒÉsit!\");\n    try {\n      var _config$network$chain, _config$network$chain2;\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      await provider.send(\"eth_requestAccounts\", []);\n      console.log(\"üîó Accounts requested!\");\n      const signer = provider.getSigner();\n      const account = await signer.getAddress();\n      console.log(\"üë§ Conectat ca:\", account);\n      setAccount(account);\n      setProvider(provider);\n      const network = await provider.getNetwork();\n      console.log(\"üåê Conectat la re»õea:\", network.chainId);\n      window.ethereum.on('accountsChanged', async () => {\n        const accounts = await window.ethereum.request({\n          method: \"eth_requestAccounts\"\n        });\n        const account = ethers.utils.getAddress(accounts[0]);\n        setAccount(accounts[0]);\n      });\n      if (!config[network.chainId]) {\n        console.error(\"‚ùå Chain ID not found in config:\", network.chainId);\n        return;\n      }\n      console.log(\"üìú Chain ID este valid, ini»õializƒÉm contractele...\");\n      const organNFTAddress = (_config$network$chain = config[network.chainId]) === null || _config$network$chain === void 0 ? void 0 : (_config$network$chain2 = _config$network$chain.organNFT) === null || _config$network$chain2 === void 0 ? void 0 : _config$network$chain2.address;\n      if (!organNFTAddress) {\n        console.error(\"‚ùå Adresa OrganNFT este undefined! VerificƒÉ config.json\");\n        return;\n      }\n      console.log(\"üéØ Adresa OrganNFT:\", organNFTAddress);\n      const organNFT = new ethers.Contract(organNFTAddress, OrganNFT.abi, signer);\n      const waitingList = new ethers.Contract(config[network.chainId].waitingList.address, WaitingList, provider);\n      const escrow = new ethers.Contract(config[network.chainId].escrow.address, OrganEscrow, provider);\n      const patientRegistry = new ethers.Contract(config[network.chainId].patientRegistry.address, PatientRegistry, provider);\n      setPatientRegistry(patientRegistry);\n      console.log(\"üìú Contracte ini»õializate\");\n      setOrganNFT(organNFT);\n      setWaitingList(waitingList);\n      setEscrow(escrow);\n\n      // Fetch NFTs\n      const totalSupply = await organNFT.totalSupply();\n      console.log(\"üè¶ Total Supply:\", totalSupply.toString());\n      let fetchedOrgans = [];\n      for (let i = 1; i <= totalSupply; i++) {\n        const uri = await organNFT.tokenURI(i);\n        if (!uri.startsWith(\"http\")) continue;\n        console.log(`üîó Token ${i} URI:`, uri);\n        try {\n          const response = await fetch(uri);\n          const metadata = await response.json();\n          fetchedOrgans.push(metadata);\n        } catch (error) {\n          console.error(\"‚ö†Ô∏è Eroare la √ÆncƒÉrcarea NFT:\", error);\n        }\n      }\n      console.log(\"‚úÖ Organs array:\", fetchedOrgans);\n      setOrgans(fetchedOrgans);\n\n      // Load patients\n      const patientList = await patientRegistry.getPatientList();\n      setPatients(patientList);\n      console.log(\"‚úÖ Patients loaded:\", patientList);\n    } catch (error) {\n      console.error(\"‚ùå Eroare √Æn loadBlockchainData:\", error);\n    }\n  };\n\n  // Func»õie pentru a adƒÉuga pacienti\n  const addPatientHandler = async () => {\n    if (!account) {\n      alert(\"Please connect your wallet.\");\n      return;\n    }\n\n    // VerificƒÉm cƒÉ doar medicul poate adƒÉuga pacien»õi\n    const doctorAddress = await patientRegistry.doctor();\n    if (account !== doctorAddress) {\n      alert(\"Only the doctor can add patients.\");\n      return;\n    }\n    const patientAddress = prompt(\"Enter patient's address:\");\n    if (!ethers.utils.isAddress(patientAddress)) {\n      alert(\"Invalid address.\");\n      return;\n    }\n    const patientInfo = prompt(\"Enter patient information:\");\n    try {\n      // Transmiterea tranzac»õiei de adƒÉugare pacient\n      const transaction = await patientRegistry.connect(provider.getSigner()).addPatient(patientAddress, patientInfo);\n      await transaction.wait();\n      alert(`Patient ${patientAddress} added successfully`);\n      // Re√ÆncƒÉrcarea pacien»õilor\n      loadBlockchainData();\n    } catch (error) {\n      console.error(\"Error adding patient:\", error);\n    }\n  };\n  useEffect(() => {\n    loadBlockchainData();\n  }, []);\n  const togglePop = home => {\n    setOrgan(home);\n    setToggle(!toggle);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {\n      account: account,\n      setAccount: setAccount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-7 flex flex-col gap-y-6 items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-4xl font-bold\",\n        children: \"Organs For You\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 3\n      }, this), account && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addPatientHandler,\n          className: \"bg-green-500 text-white p-2 rounded-md\",\n          children: \"Add Patient\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-xl font-bold\",\n          children: \"Patients List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"list-disc mt-2\",\n          children: patients.length === 0 ? /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"No patients added yet.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 9\n          }, this) : patients.map((patientAddress, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: `${patientAddress.slice(0, 6)}...${patientAddress.slice(-4)}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 13\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 11\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-7 flex flex-col gap-y-6 items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-4xl font-bold\",\n          children: \"Organs For You\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-center space-x-5 p-1\",\n          children: !organs.length ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, this) : organs.map((organ, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rounded-lg shadow-xl\",\n            onClick: () => togglePop(organ),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: organ.image,\n                className: \"w-[350px] h-auto rounded-t-lg\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex justify-between p-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"bg-red-200 flex items-center py-1 px-4 rounded-xl cursor-pointer\",\n                  children: /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: organ.attributes[0].value\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 229,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 228,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex items-center\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: organ.attributes[2].value\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 232,\n                    columnNumber: 23\n                  }, this), \" bds |\", /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: organ.attributes[3].value\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 233,\n                    columnNumber: 23\n                  }, this), \" ba |\", /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: organ.attributes[4].value\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 234,\n                    columnNumber: 23\n                  }, this), \" sqft\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 231,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"p-3\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-sm\",\n                  children: organ.address\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 238,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this), toggle && /*#__PURE__*/_jsxDEV(Home, {\n      organ: organ,\n      provider: provider,\n      account: account,\n      escrow: escrow,\n      togglePop: togglePop\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"iW0NHtBjT1+Reg63rssyThMmw3I=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","ethers","logo","OrganNFT","OrganEscrow","WaitingList","PatientRegistry","config","Navigation","Search","Home","jsxDEV","_jsxDEV","App","_s","account","setAccount","provider","setProvider","organNFT","setOrganNFT","waitingList","setWaitingList","escrow","setEscrow","organs","setOrgans","organ","setOrgan","toggle","setToggle","patientRegistry","setPatientRegistry","patients","setPatients","loadBlockchainData","console","log","window","ethereum","error","_config$network$chain","_config$network$chain2","providers","Web3Provider","send","signer","getSigner","getAddress","network","getNetwork","chainId","on","accounts","request","method","utils","organNFTAddress","address","Contract","abi","totalSupply","toString","fetchedOrgans","i","uri","tokenURI","startsWith","response","fetch","metadata","json","push","patientList","getPatientList","addPatientHandler","alert","doctorAddress","doctor","patientAddress","prompt","isAddress","patientInfo","transaction","connect","addPatient","wait","togglePop","home","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","length","map","index","slice","src","image","attributes","value","_c","$RefreshReg$"],"sources":["/Users/sebyboiciuc/Desktop/ITFest-MTS/src/App.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { ethers } from \"ethers\"; // AsigurƒÉ-te cƒÉ folose»ôti v5 corect instalat\nimport logo from \"./assets/logo1.png\";\n\n// ABIs\nimport OrganNFT from \"./abis/OrganNFT.json\";\nimport OrganEscrow from \"./abis/OrganEscrow.json\";\nimport WaitingList from \"./abis/WaitingList.json\";\nimport PatientRegistry from './abis/PatientRegistry.json';\n\n// Config\nimport config from \"./config.json\";\nimport Navigation from \"./components/Navigation\";\nimport Search from \"./components/Search\";\nimport Home from \"./components/Home\";\n\nfunction App() {\n  const [account, setAccount] = useState(null);\n  const [provider, setProvider] = useState(null);\n  const [organNFT, setOrganNFT] = useState(null);\n  const [waitingList, setWaitingList] = useState(null);\n  const [escrow, setEscrow] = useState(null);\n  const [organs, setOrgans] = useState([]);\n  const [organ, setOrgan] = useState([]);\n  const [toggle, setToggle] = useState(false);\n  const [patientRegistry, setPatientRegistry] = useState(null);\n  const [patients, setPatients] = useState([]); // Lista pacien»õilor adƒÉuga»õi\n\n  const loadBlockchainData = async () => {\n    console.log(\"üöÄ loadBlockchainData called!\");\n\n    if (!window.ethereum) {\n      console.error(\"‚ùå MetaMask nu este instalat!\");\n      return;\n    }\n\n    console.log(\"‚úÖ MetaMask gƒÉsit!\");\n\n    try {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      await provider.send(\"eth_requestAccounts\", []);\n      console.log(\"üîó Accounts requested!\");\n\n      const signer = provider.getSigner();\n      const account = await signer.getAddress();\n      console.log(\"üë§ Conectat ca:\", account);\n\n      setAccount(account);\n      setProvider(provider);\n\n      const network = await provider.getNetwork();\n      console.log(\"üåê Conectat la re»õea:\", network.chainId);\n\n      window.ethereum.on('accountsChanged', async () =>{\n        const accounts = await window.ethereum.request({ method: \"eth_requestAccounts\" });\n        const account = ethers.utils.getAddress(accounts[0]);\n        setAccount(accounts[0]);\n      }) ;\n\n      if (!config[network.chainId]) {\n        console.error(\"‚ùå Chain ID not found in config:\", network.chainId);\n        return;\n      }\n\n      console.log(\"üìú Chain ID este valid, ini»õializƒÉm contractele...\");\n\n      const organNFTAddress = config[network.chainId]?.organNFT?.address;\n      if (!organNFTAddress) {\n        console.error(\"‚ùå Adresa OrganNFT este undefined! VerificƒÉ config.json\");\n        return;\n      }\n\n      console.log(\"üéØ Adresa OrganNFT:\", organNFTAddress);\n\n      const organNFT = new ethers.Contract(\n        organNFTAddress,\n        OrganNFT.abi,\n        signer\n      );\n\n      const waitingList = new ethers.Contract(\n        config[network.chainId].waitingList.address,\n        WaitingList,\n        provider\n      );\n\n      const escrow = new ethers.Contract(\n        config[network.chainId].escrow.address,\n        OrganEscrow,\n        provider\n      );\n\n      const patientRegistry = new ethers.Contract(\n        config[network.chainId].patientRegistry.address,\n        PatientRegistry,\n        provider\n      );\n\n      setPatientRegistry(patientRegistry);\n      console.log(\"üìú Contracte ini»õializate\");\n\n      setOrganNFT(organNFT);\n      setWaitingList(waitingList);\n      setEscrow(escrow);\n\n      // Fetch NFTs\n      const totalSupply = await organNFT.totalSupply();\n      console.log(\"üè¶ Total Supply:\", totalSupply.toString());\n\n      let fetchedOrgans = [];\n      for (let i = 1; i <= totalSupply; i++) {\n        const uri = await organNFT.tokenURI(i);\n        if (!uri.startsWith(\"http\")) continue;\n        console.log(`üîó Token ${i} URI:`, uri);\n        try {\n          const response = await fetch(uri);\n          const metadata = await response.json();\n          fetchedOrgans.push(metadata);\n        } catch (error) {\n          console.error(\"‚ö†Ô∏è Eroare la √ÆncƒÉrcarea NFT:\", error);\n        }\n      }\n\n      console.log(\"‚úÖ Organs array:\", fetchedOrgans);\n      setOrgans(fetchedOrgans);\n\n      // Load patients\n      const patientList = await patientRegistry.getPatientList();\n      setPatients(patientList);\n      console.log(\"‚úÖ Patients loaded:\", patientList);\n\n    } catch (error) {\n      console.error(\"‚ùå Eroare √Æn loadBlockchainData:\", error);\n    }\n};\n\n\n  // Func»õie pentru a adƒÉuga pacienti\n  const addPatientHandler = async () => {\n    if (!account) {\n      alert(\"Please connect your wallet.\");\n      return;\n    }\n\n    // VerificƒÉm cƒÉ doar medicul poate adƒÉuga pacien»õi\n    const doctorAddress = await patientRegistry.doctor();\n    if (account !== doctorAddress) {\n      alert(\"Only the doctor can add patients.\");\n      return;\n    }\n\n    const patientAddress = prompt(\"Enter patient's address:\");\n    if (!ethers.utils.isAddress(patientAddress)) {\n      alert(\"Invalid address.\");\n      return;\n    }\n\n    const patientInfo = prompt(\"Enter patient information:\");\n    try {\n      // Transmiterea tranzac»õiei de adƒÉugare pacient\n      const transaction = await patientRegistry.connect(provider.getSigner()).addPatient(patientAddress, patientInfo);\n      await transaction.wait();\n      alert(`Patient ${patientAddress} added successfully`);\n      // Re√ÆncƒÉrcarea pacien»õilor\n      loadBlockchainData();\n    } catch (error) {\n      console.error(\"Error adding patient:\", error);\n    }\n  };\n\n  useEffect(() => {\n    loadBlockchainData();\n  }, []);\n\n  const togglePop = (home) => {\n    setOrgan(home);\n    setToggle(!toggle);\n  };\n\n  return (\n    <div>\n      <Navigation account={account} setAccount={setAccount} />\n      <Search />\n\n      <div className=\"p-7 flex flex-col gap-y-6 items-center\">\n  <p className=\"text-4xl font-bold\">Organs For You</p>\n      \n      {/* Buton pentru a adƒÉuga pacienti */}\n      {account && (\n        <div>\n          <button\n            onClick={addPatientHandler}\n            className=\"bg-green-500 text-white p-2 rounded-md\"\n          >\n            Add Patient\n          </button>\n        </div>\n      )}\n\n<div className=\"mt-5\">\n    <h3 className=\"text-xl font-bold\">Patients List</h3>\n    <ul className=\"list-disc mt-2\">\n      {patients.length === 0 ? (\n        <li>No patients added yet.</li>\n      ) : (\n        patients.map((patientAddress, index) => (\n          <li key={index}>\n            <p>{`${patientAddress.slice(0, 6)}...${patientAddress.slice(-4)}`}</p>\n          </li>\n        ))\n      )}\n    </ul>\n  </div>\n\n      <div className=\"p-7 flex flex-col gap-y-6 items-center\">\n        <p className=\"text-4xl font-bold\">Organs For You</p>\n        <div className=\"flex justify-center space-x-5 p-1\">\n          {!organs.length ? (\n            <p>Loading...</p>\n          ) : (\n            organs.map((organ, index) => (\n              <div key={index} className=\"rounded-lg shadow-xl\" onClick={() => togglePop(organ)}>\n                <div>\n                  <img src={organ.image} className=\"w-[350px] h-auto rounded-t-lg\" />\n                </div>\n                <div>\n                  <div className=\"flex justify-between p-3\">\n                    <div className=\"bg-red-200 flex items-center py-1 px-4 rounded-xl cursor-pointer\">\n                      <p>{organ.attributes[0].value}</p>\n                    </div>\n                    <div className=\"flex items-center\">\n                      <strong>{organ.attributes[2].value}</strong> bds |\n                      <strong>{organ.attributes[3].value}</strong> ba |\n                      <strong>{organ.attributes[4].value}</strong> sqft\n                    </div>\n                  </div>\n                  <div className=\"p-3\">\n                    <p className=\"text-sm\">{organ.address}</p>\n                  </div>\n                </div>\n              </div>\n            ))\n          )}\n        </div>\n        </div>\n\n      </div>\n\n      {toggle && (\n        <Home organ={organ} provider={provider} account={account} escrow={escrow} togglePop={togglePop} />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}