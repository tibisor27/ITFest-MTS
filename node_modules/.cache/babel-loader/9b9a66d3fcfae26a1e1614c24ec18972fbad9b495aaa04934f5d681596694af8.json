{"ast":null,"code":"var _jsxFileName = \"/Users/sebyboiciuc/Desktop/hackaton/ITFest-MTS/src/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { ethers } from \"ethers\"; // Asigură-te că folosești v5 corect instalat\nimport logo from \"./assets/logo1.png\";\nimport AddOrgan from \"./components/AddOrgan\";\nimport { uploadToPinata } from \"./utils/pinata\";\nimport CryptoJS from \"crypto-js\";\n\n// ABIs\nimport OrganNFT from \"./abis/OrganNFT.json\";\nimport OrganEscrow from \"./abis/OrganEscrow.json\";\nimport WaitingList from \"./abis/WaitingList.json\";\nimport PatientRegistry from './abis/PatientRegistry.json';\n\n// Config\nimport config from \"./config.json\";\nimport Navigation from \"./components/Navigation\";\nimport Search from \"./components/Search\";\nimport Home from \"./components/Home\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst secretKey = \"rosibes2712\";\nfunction App() {\n  _s();\n  const [account, setAccount] = useState(null);\n  const [provider, setProvider] = useState(null);\n  const [organNFT, setOrganNFT] = useState(null);\n  const [waitingList, setWaitingList] = useState(null);\n  const [escrow, setEscrow] = useState(null);\n  const [organs, setOrgans] = useState([]);\n  const [organ, setOrgan] = useState([]);\n  const [toggle, setToggle] = useState(false);\n  const [patientRegistry, setPatientRegistry] = useState(null);\n  const [patients, setPatients] = useState([]); // Lista pacienților adăugați\n  const [donorAddress, setDonorAddress] = useState(null);\n  const [showForm, setShowForm] = useState(false); // Stare pentru a afișa/ascunde formularul\n  const [patientData, setPatientData] = useState({\n    address: \"\",\n    name: \"\",\n    bloodType: \"\",\n    sex: \"\",\n    age: \"\"\n  });\n  const [decryptedPatientData, setDecryptedPatientData] = useState(null);\n  const [foundPatient, setFoundPatient] = useState(null);\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setPatientData(prevData => ({\n      ...prevData,\n      [name]: value\n    }));\n    console.log(`Updated ${name}:`, value); // Afișează câmpul actualizat\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    console.log(\"Patient Data to be submitted:\", patientData); // Afișează datele pacientului\n    const {\n      address,\n      ...details\n    } = patientData;\n    await addPatientHandler(address, details);\n    setShowForm(false);\n    setPatientData({\n      address: \"\",\n      name: \"\",\n      bloodType: \"\",\n      sex: \"\",\n      age: \"\"\n    });\n  };\n  const loadBlockchainData = async () => {\n    console.log(\"🚀 loadBlockchainData called!\");\n    if (!window.ethereum) {\n      console.error(\"❌ MetaMask nu este instalat!\");\n      return;\n    }\n    try {\n      var _config$network$chain, _config$network$chain2;\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      await provider.send(\"eth_requestAccounts\", []);\n      const signer = provider.getSigner();\n      const account = await signer.getAddress();\n      setAccount(account);\n      setProvider(provider);\n      const network = await provider.getNetwork();\n      if (!config[network.chainId]) {\n        console.error(\"❌ Chain ID not found in config:\", network.chainId);\n        return;\n      }\n      window.ethereum.on('accountsChanged', async () => {\n        const accounts = await window.ethereum.request({\n          method: 'eth_requestAccounts'\n        });\n        const account = ethers.utils.getAddress(accounts[0]);\n        setAccount(account);\n      });\n      const organNFTAddress = (_config$network$chain = config[network.chainId]) === null || _config$network$chain === void 0 ? void 0 : (_config$network$chain2 = _config$network$chain.organNFT) === null || _config$network$chain2 === void 0 ? void 0 : _config$network$chain2.address;\n      if (!organNFTAddress) {\n        console.error(\"❌ Adresa OrganNFT este undefined! Verifică config.json\");\n        return;\n      }\n      const organNFT = new ethers.Contract(organNFTAddress, OrganNFT, signer);\n      setOrganNFT(organNFT);\n      const waitingList = new ethers.Contract(config[network.chainId].waitingList.address, WaitingList, provider);\n      const escrow = new ethers.Contract(config[network.chainId].escrow.address, OrganEscrow, provider);\n      const patientRegistry = new ethers.Contract(config[network.chainId].patientRegistry.address, PatientRegistry, provider);\n      setWaitingList(waitingList);\n      setEscrow(escrow);\n      setPatientRegistry(patientRegistry);\n      console.log(\"📜 Contracte inițializate!\");\n\n      // Fetch NFTs\n      const totalSupply = await organNFT.totalSupply();\n      console.log(\"🏦 Total Supply:\", totalSupply.toString());\n      let fetchedOrgans = [];\n      for (let i = 1; i <= totalSupply; i++) {\n        const uri = await organNFT.tokenURI(i);\n        if (!uri.startsWith(\"http\")) continue;\n        try {\n          const response = await fetch(uri);\n          const metadata = await response.json();\n          fetchedOrgans.push(metadata);\n        } catch (error) {\n          console.error(\"⚠️ Eroare la încărcarea NFT:\", error);\n        }\n      }\n      setOrgans(fetchedOrgans);\n      console.log(\"✅ Organs loaded:\", fetchedOrgans);\n\n      // Load patients\n      const patientList = await patientRegistry.getPatientList();\n      setPatients(patientList);\n      console.log(\"✅ Patients loaded:\", patientList);\n\n      // 🔥 Apelează fetchDonorAddress DOAR după ce organNFT este setat!\n      await fetchDonorAddress(organNFT);\n    } catch (error) {\n      console.error(\"❌ Eroare în loadBlockchainData:\", error);\n    }\n  };\n  const fetchDonorAddress = async organNFT => {\n    if (!organNFT) {\n      console.error(\"❌ organNFT nu este inițializat!\");\n      return;\n    }\n    try {\n      const totalSupply = await organNFT.totalSupply();\n      console.log(\"🏦 Total NFT Supply:\", totalSupply.toString());\n      if (totalSupply > 0) {\n        const donor = await organNFT.getDonor(1); // 🩸 Donor pentru primul NFT\n        setDonorAddress(donor);\n        console.log(\"🎗 Donor Address setat:\", donor);\n      } else {\n        console.warn(\"⚠️ Nu există NFT-uri, donorAddress rămâne null.\");\n      }\n    } catch (error) {\n      console.error(\"❌ Eroare la obținerea donorului:\", error);\n    }\n  };\n  const encryptData = (data, secret) => {\n    return CryptoJS.AES.encrypt(JSON.stringify(data), secret).toString();\n  };\n  const addPatientHandler = async (patientAddress, patientInfo) => {\n    if (!account) {\n      alert(\"Please connect your wallet.\");\n      return;\n    }\n    const doctorAddress = await patientRegistry.doctor();\n    if (account !== doctorAddress) {\n      alert(\"Only the doctor can add patients.\");\n      return;\n    }\n    if (!ethers.utils.isAddress(patientAddress)) {\n      alert(\"Invalid address.\");\n      return;\n    }\n    try {\n      const encryptedPatientInfo = encryptData(patientInfo, secretKey);\n      const signer = provider.getSigner();\n      const patientRegistryWithSigner = patientRegistry.connect(signer);\n      const tx = await patientRegistryWithSigner.addPatient(patientAddress, encryptedPatientInfo);\n      console.log(\"adresa pacient:\", patientAddress);\n      console.log(\"patiennt info:\", patientInfo);\n      console.log(\"patiennt data:\", patientData);\n      console.log(\"ecnrypted patient info:\", encryptedPatientInfo);\n      await tx.wait(); // 🔥 Așteptăm confirmarea tranzacției\n      alert(`Patient ${patientAddress} added successfully`);\n\n      // 🛠 Actualizăm manual lista pacienților\n      const updatedPatients = await patientRegistry.getPatientList();\n      setPatients(updatedPatients); // 🔥 Acum pacienții sunt actualizați în interfață\n    } catch (error) {\n      console.error(\"Error adding patient:\", error);\n      alert(\"Failed to add patient.\");\n    }\n  };\n  const decryptData = (encryptedData, secret) => {\n    try {\n      const bytes = CryptoJS.AES.decrypt(encryptedData, secret);\n      return JSON.parse(bytes.toString(CryptoJS.enc.Utf8));\n    } catch (error) {\n      console.error(\"Decryption failed:\", error);\n      return null;\n    }\n  };\n\n  // Exemplu de utilizare pentru a afișa detaliile pacientului\n  const fetchPatientData = async patientAddress => {\n    const userInputKey = prompt(\"Enter the secret key to view details:\");\n    if (userInputKey !== secretKey) {\n      alert(\"Incorrect secret key!\");\n      return;\n    }\n    try {\n      const patient = await patientRegistry.patients(patientAddress);\n      const decryptedData = decryptData(patient.patientInfo, secretKey);\n      if (decryptedData) {\n        setDecryptedPatientData(decryptedData);\n        console.log(\"Decrypted Patient Data:\", decryptedData);\n      } else {\n        alert(\"Failed to decrypt patient data.\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching patient data:\", error);\n    }\n  };\n  const findPatientByCriteria = async criteria => {\n    if (!patientRegistry || foundPatient) return; // Dacă deja avem un pacient, nu mai căutăm\n\n    try {\n      const patientList = await patientRegistry.getPatientList();\n      for (const patientAddress of patientList) {\n        const patient = await patientRegistry.patients(patientAddress);\n        const decryptedData = decryptData(patient.patientInfo, secretKey);\n        if (decryptedData && decryptedData.bloodType === criteria.bloodType) {\n          console.log(\"✅ Pacient găsit:\", decryptedData);\n          setFoundPatient({\n            address: patientAddress,\n            ...decryptedData\n          });\n          return;\n        }\n      }\n      console.warn(\"⚠️ Niciun pacient nu corespunde criteriului.\");\n    } catch (error) {\n      console.error(\"❌ Eroare la căutarea pacientului:\", error);\n    }\n  };\n  useEffect(() => {\n    loadBlockchainData();\n  }, []);\n  const togglePop = home => {\n    setOrgan(home);\n    setToggle(!toggle);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {\n      account: account,\n      setAccount: setAccount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-7 flex flex-col gap-y-6 items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-4xl font-bold\",\n        children: \"Organs For You\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 3\n      }, this), account && organNFT && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-xl font-bold\",\n          children: \"Donate an Organ\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(AddOrgan, {\n          organNFT: organNFT,\n          provider: provider,\n          account: account,\n          donorAddress: donorAddress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 3\n      }, this), account && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowForm(true),\n          className: \"bg-green-500 text-white p-2 rounded-md\",\n          children: \"Add Patient\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 5\n        }, this), showForm && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4 p-4 border rounded-lg bg-gray-100\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-bold mb-2\",\n            children: \"Add New Patient\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium mb-1\",\n                children: \"Patient Address\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 345,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"address\",\n                value: patientData.address,\n                onChange: handleInputChange,\n                className: \"w-full p-2 border rounded-md\",\n                placeholder: \"Enter patient's address\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 346,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium mb-1\",\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 359,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"name\",\n                value: patientData.name,\n                onChange: handleInputChange,\n                className: \"w-full p-2 border rounded-md\",\n                placeholder: \"Enter patient's name\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 360,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium mb-1\",\n                children: \"Blood Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 373,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                name: \"bloodType\",\n                value: patientData.bloodType,\n                onChange: handleInputChange,\n                className: \"w-full p-2 border rounded-md\",\n                required: true,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select blood type\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 381,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"A+\",\n                  children: \"A+\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 382,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"A-\",\n                  children: \"A-\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 383,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"B+\",\n                  children: \"B+\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 384,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"B-\",\n                  children: \"B-\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 385,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"AB+\",\n                  children: \"AB+\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 386,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"AB-\",\n                  children: \"AB-\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 387,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"O+\",\n                  children: \"O+\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 388,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"O-\",\n                  children: \"O-\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 389,\n                  columnNumber: 11\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 374,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium mb-1\",\n                children: \"Sex\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 395,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                name: \"sex\",\n                value: patientData.sex,\n                onChange: handleInputChange,\n                className: \"w-full p-2 border rounded-md\",\n                required: true,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select sex\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 403,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Male\",\n                  children: \"Male\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 404,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Female\",\n                  children: \"Female\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 405,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Other\",\n                  children: \"Other\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 406,\n                  columnNumber: 11\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 396,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 394,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium mb-1\",\n                children: \"Age\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 412,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                name: \"age\",\n                value: patientData.age,\n                onChange: handleInputChange,\n                className: \"w-full p-2 border rounded-md\",\n                placeholder: \"Enter patient's age\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 413,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 411,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-end\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: () => setShowForm(false),\n                className: \"mr-2 bg-gray-500 text-white p-2 rounded-md\",\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 426,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"bg-green-500 text-white p-2 rounded-md\",\n                children: \"Add Patient\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 433,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 425,\n              columnNumber: 7\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-xl font-bold\",\n          children: \"Patients List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"list-disc mt-2\",\n          children: patients.length === 0 ? /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"No patients added yet.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 452,\n            columnNumber: 7\n          }, this) : patients.map((patientAddress, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"flex items-center space-x-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: `${patientAddress.slice(0, 6)}...${patientAddress.slice(-4)}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 456,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => fetchPatientData(patientAddress),\n              className: \"bg-blue-500 text-white p-1 rounded-md text-sm\",\n              children: \"View Details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 457,\n              columnNumber: 11\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 455,\n            columnNumber: 9\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: async () => {\n            if (!foundPatient) {\n              await findPatientByCriteria({\n                bloodType: \"B+\"\n              });\n            }\n            if (foundPatient) {\n              alert(`Pacient găsit: ${foundPatient.name}, Adresă: ${foundPatient.address}`);\n            } else {\n              alert(\"Nu s-a găsit niciun pacient cu B+.\");\n            }\n          },\n          className: \"bg-red-500 text-white p-2 rounded-md\",\n          children: \"Find First B+ Patient\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 3\n        }, this), decryptedPatientData && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4 p-4 border rounded-lg bg-gray-100\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-bold mb-2\",\n            children: \"Patient Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 488,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 489,\n              columnNumber: 10\n            }, this), \" \", decryptedPatientData.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 489,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Blood Type:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 490,\n              columnNumber: 10\n            }, this), \" \", decryptedPatientData.bloodType]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 490,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Sex:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 491,\n              columnNumber: 10\n            }, this), \" \", decryptedPatientData.sex]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 491,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Age:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 492,\n              columnNumber: 10\n            }, this), \" \", decryptedPatientData.age]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 492,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 486,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-7 flex flex-col gap-y-6 items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-4xl font-bold\",\n          children: \"Organs For You\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 499,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-center space-x-5 p-1\",\n          children: !organs.length ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 502,\n            columnNumber: 7\n          }, this) : organs.map((organ, index) => {\n            var _organ$attributes, _organ$attributes$fin;\n            return organ && organ.attributes ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"rounded-lg shadow-xl\",\n              onClick: () => togglePop(organ),\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: organ.image || \"fallback.jpg\",\n                  className: \"w-[350px] h-auto rounded-t-lg\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 508,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 507,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"p-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Organ:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 511,\n                    columnNumber: 18\n                  }, this), \" \", organ.organ || \"N/A\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 511,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Blood Type:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 512,\n                    columnNumber: 18\n                  }, this), \" \", organ.BloodType || ((_organ$attributes = organ.attributes) === null || _organ$attributes === void 0 ? void 0 : (_organ$attributes$fin = _organ$attributes.find(attr => attr.trait_type === \"Blood Type\")) === null || _organ$attributes$fin === void 0 ? void 0 : _organ$attributes$fin.value) || \"N/A\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 512,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Description:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 513,\n                    columnNumber: 18\n                  }, this), \" \", organ.description || \"No description\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 513,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"ID:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 514,\n                    columnNumber: 18\n                  }, this), \" \", organ.id]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 514,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mt-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Attributes:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 518,\n                    columnNumber: 17\n                  }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                    children: organ.attributes.map((attr, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n                      children: [attr.trait_type, \": \", attr.value]\n                    }, i, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 521,\n                      columnNumber: 21\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 519,\n                    columnNumber: 17\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 517,\n                  columnNumber: 15\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 510,\n                columnNumber: 13\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 506,\n              columnNumber: 11\n            }, this) : null;\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 500,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 498,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 7\n    }, this), toggle && /*#__PURE__*/_jsxDEV(Home, {\n      organ: organ,\n      provider: provider,\n      account: account,\n      escrow: escrow,\n      togglePop: togglePop,\n      organs: organs,\n      findPatientByCriteria: findPatientByCriteria,\n      foundPatient: foundPatient // Pasăm pacientul găsit către Home\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 537,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 311,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"G1c58V6bH7r4KJrgVQ29Tc2v9R4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","ethers","logo","AddOrgan","uploadToPinata","CryptoJS","OrganNFT","OrganEscrow","WaitingList","PatientRegistry","config","Navigation","Search","Home","jsxDEV","_jsxDEV","secretKey","App","_s","account","setAccount","provider","setProvider","organNFT","setOrganNFT","waitingList","setWaitingList","escrow","setEscrow","organs","setOrgans","organ","setOrgan","toggle","setToggle","patientRegistry","setPatientRegistry","patients","setPatients","donorAddress","setDonorAddress","showForm","setShowForm","patientData","setPatientData","address","name","bloodType","sex","age","decryptedPatientData","setDecryptedPatientData","foundPatient","setFoundPatient","handleInputChange","e","value","target","prevData","console","log","handleSubmit","preventDefault","details","addPatientHandler","loadBlockchainData","window","ethereum","error","_config$network$chain","_config$network$chain2","providers","Web3Provider","send","signer","getSigner","getAddress","network","getNetwork","chainId","on","accounts","request","method","utils","organNFTAddress","Contract","totalSupply","toString","fetchedOrgans","i","uri","tokenURI","startsWith","response","fetch","metadata","json","push","patientList","getPatientList","fetchDonorAddress","donor","getDonor","warn","encryptData","data","secret","AES","encrypt","JSON","stringify","patientAddress","patientInfo","alert","doctorAddress","doctor","isAddress","encryptedPatientInfo","patientRegistryWithSigner","connect","tx","addPatient","wait","updatedPatients","decryptData","encryptedData","bytes","decrypt","parse","enc","Utf8","fetchPatientData","userInputKey","prompt","patient","decryptedData","findPatientByCriteria","criteria","togglePop","home","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","onSubmit","type","onChange","placeholder","required","length","map","index","slice","_organ$attributes","_organ$attributes$fin","attributes","src","image","BloodType","find","attr","trait_type","description","id","_c","$RefreshReg$"],"sources":["/Users/sebyboiciuc/Desktop/hackaton/ITFest-MTS/src/App.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { ethers } from \"ethers\"; // Asigură-te că folosești v5 corect instalat\nimport logo from \"./assets/logo1.png\";\nimport AddOrgan from \"./components/AddOrgan\";\nimport { uploadToPinata } from \"./utils/pinata\";\nimport CryptoJS from \"crypto-js\";\n\n\n\n// ABIs\nimport OrganNFT from \"./abis/OrganNFT.json\";\nimport OrganEscrow from \"./abis/OrganEscrow.json\";\nimport WaitingList from \"./abis/WaitingList.json\";\nimport PatientRegistry from './abis/PatientRegistry.json';\n\n// Config\nimport config from \"./config.json\";\nimport Navigation from \"./components/Navigation\";\nimport Search from \"./components/Search\";\nimport Home from \"./components/Home\";\n\n\nconst secretKey = \"rosibes2712\";\nfunction App() {\n  const [account, setAccount] = useState(null);\n  const [provider, setProvider] = useState(null);\n  const [organNFT, setOrganNFT] = useState(null);\n  const [waitingList, setWaitingList] = useState(null);\n  const [escrow, setEscrow] = useState(null);\n  const [organs, setOrgans] = useState([]);\n  const [organ, setOrgan] = useState([]);\n  const [toggle, setToggle] = useState(false);\n  const [patientRegistry, setPatientRegistry] = useState(null);\n  const [patients, setPatients] = useState([]); // Lista pacienților adăugați\n  const [donorAddress, setDonorAddress] = useState(null);\n  const [showForm, setShowForm] = useState(false); // Stare pentru a afișa/ascunde formularul\n  const [patientData, setPatientData] = useState({\n    address: \"\",\n    name: \"\",\n    bloodType: \"\",\n    sex: \"\",\n    age: \"\",\n  });\n  const [decryptedPatientData, setDecryptedPatientData] = useState(null);\n  const [foundPatient, setFoundPatient] = useState(null);\n\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setPatientData((prevData) => ({\n      ...prevData,\n      [name]: value,\n    }));\n    console.log(`Updated ${name}:`, value); // Afișează câmpul actualizat\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    console.log(\"Patient Data to be submitted:\", patientData); // Afișează datele pacientului\n    const { address, ...details } = patientData;\n    await addPatientHandler(address, details);\n    setShowForm(false);\n    setPatientData({ address: \"\", name: \"\", bloodType: \"\", sex: \"\", age: \"\" });\n  };\n\n\n  const loadBlockchainData = async () => {\n    console.log(\"🚀 loadBlockchainData called!\");\n    \n    if (!window.ethereum) {\n      console.error(\"❌ MetaMask nu este instalat!\");\n      return;\n    }\n  \n    try {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      await provider.send(\"eth_requestAccounts\", []);\n      const signer = provider.getSigner();\n      const account = await signer.getAddress();\n  \n      setAccount(account);\n      setProvider(provider);\n  \n      const network = await provider.getNetwork();\n      if (!config[network.chainId]) {\n        console.error(\"❌ Chain ID not found in config:\", network.chainId);\n        return;\n      }\n  \n      window.ethereum.on('accountsChanged', async() => {\n        const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n        const account = ethers.utils.getAddress(accounts[0])\n        setAccount(account);\n      }); \n      \n      const organNFTAddress = config[network.chainId]?.organNFT?.address;\n      if (!organNFTAddress) {\n        console.error(\"❌ Adresa OrganNFT este undefined! Verifică config.json\");\n        return;\n      }\n  \n      const organNFT = new ethers.Contract(organNFTAddress, OrganNFT, signer);\n      setOrganNFT(organNFT);\n  \n      const waitingList = new ethers.Contract(\n        config[network.chainId].waitingList.address,\n        WaitingList,\n        provider\n      );\n  \n      const escrow = new ethers.Contract(\n        config[network.chainId].escrow.address,\n        OrganEscrow,\n        provider\n      );\n  \n      const patientRegistry = new ethers.Contract(\n        config[network.chainId].patientRegistry.address,\n        PatientRegistry,\n        provider\n      );\n  \n      setWaitingList(waitingList);\n      setEscrow(escrow);\n      setPatientRegistry(patientRegistry);\n  \n      console.log(\"📜 Contracte inițializate!\");\n  \n      // Fetch NFTs\n      const totalSupply = await organNFT.totalSupply();\n      console.log(\"🏦 Total Supply:\", totalSupply.toString());\n  \n      let fetchedOrgans = [];\n      for (let i = 1; i <= totalSupply; i++) {\n        const uri = await organNFT.tokenURI(i);\n        if (!uri.startsWith(\"http\")) continue;\n        try {\n          const response = await fetch(uri);\n          const metadata = await response.json();\n          fetchedOrgans.push(metadata);\n        } catch (error) {\n          console.error(\"⚠️ Eroare la încărcarea NFT:\", error);\n        }\n      }\n  \n      setOrgans(fetchedOrgans);\n\n      console.log(\"✅ Organs loaded:\", fetchedOrgans);\n  \n      // Load patients\n      const patientList = await patientRegistry.getPatientList();\n      setPatients(patientList);\n      console.log(\"✅ Patients loaded:\", patientList);\n  \n      // 🔥 Apelează fetchDonorAddress DOAR după ce organNFT este setat!\n      await fetchDonorAddress(organNFT);\n  \n    } catch (error) {\n      console.error(\"❌ Eroare în loadBlockchainData:\", error);\n    }\n  };\n  \n\n\n  const fetchDonorAddress = async (organNFT) => {\n    if (!organNFT) {\n      console.error(\"❌ organNFT nu este inițializat!\");\n      return;\n    }\n  \n    try {\n      const totalSupply = await organNFT.totalSupply();\n      console.log(\"🏦 Total NFT Supply:\", totalSupply.toString());\n  \n      if (totalSupply > 0) {\n        const donor = await organNFT.getDonor(1); // 🩸 Donor pentru primul NFT\n        setDonorAddress(donor);\n        console.log(\"🎗 Donor Address setat:\", donor);\n      } else {\n        console.warn(\"⚠️ Nu există NFT-uri, donorAddress rămâne null.\");\n      }\n    } catch (error) {\n      console.error(\"❌ Eroare la obținerea donorului:\", error);\n    }\n  };\n  \n\n  const encryptData = (data, secret) => {\n    return CryptoJS.AES.encrypt(JSON.stringify(data), secret).toString();\n  };\n  \n\n\nconst addPatientHandler = async (patientAddress, patientInfo) => {\n  if (!account) {\n    alert(\"Please connect your wallet.\");\n    return;\n  }\n\n  const doctorAddress = await patientRegistry.doctor();\n  if (account !== doctorAddress) {\n    alert(\"Only the doctor can add patients.\");\n    return;\n  }\n\n  if (!ethers.utils.isAddress(patientAddress)) {\n    alert(\"Invalid address.\");\n    return;\n  }\n\n\n  try {\n    const encryptedPatientInfo = encryptData(patientInfo, secretKey);\n\n    const signer = provider.getSigner();\n    const patientRegistryWithSigner = patientRegistry.connect(signer);\n\n    const tx = await patientRegistryWithSigner.addPatient(patientAddress, encryptedPatientInfo);\n    console.log(\"adresa pacient:\", patientAddress)\n    console.log(\"patiennt info:\", patientInfo)\n    console.log(\"patiennt data:\", patientData)\n    console.log(\"ecnrypted patient info:\", encryptedPatientInfo)\n\n    await tx.wait(); // 🔥 Așteptăm confirmarea tranzacției\n    alert(`Patient ${patientAddress} added successfully`);\n\n    // 🛠 Actualizăm manual lista pacienților\n    const updatedPatients = await patientRegistry.getPatientList();\n    setPatients(updatedPatients); // 🔥 Acum pacienții sunt actualizați în interfață\n  } catch (error) {\n    console.error(\"Error adding patient:\", error);\n    alert(\"Failed to add patient.\");\n  }\n\n\n\n};\n\nconst decryptData = (encryptedData, secret) => {\n  try {\n    const bytes = CryptoJS.AES.decrypt(encryptedData, secret);\n    return JSON.parse(bytes.toString(CryptoJS.enc.Utf8));\n  } catch (error) {\n    console.error(\"Decryption failed:\", error);\n    return null;\n  }\n};\n\n// Exemplu de utilizare pentru a afișa detaliile pacientului\nconst fetchPatientData = async (patientAddress) => {\n  const userInputKey = prompt(\"Enter the secret key to view details:\");\n\n  if (userInputKey !== secretKey) {\n    alert(\"Incorrect secret key!\");\n    return;\n  }\n\n  try {\n    const patient = await patientRegistry.patients(patientAddress);\n    const decryptedData = decryptData(patient.patientInfo, secretKey);\n\n    if (decryptedData) {\n      setDecryptedPatientData(decryptedData);\n      console.log(\"Decrypted Patient Data:\", decryptedData);\n    } else {\n      alert(\"Failed to decrypt patient data.\");\n    }\n  } catch (error) {\n    console.error(\"Error fetching patient data:\", error);\n  }\n};\n\n\n\nconst findPatientByCriteria = async (criteria) => {\n  if (!patientRegistry || foundPatient) return; // Dacă deja avem un pacient, nu mai căutăm\n\n  try {\n    const patientList = await patientRegistry.getPatientList();\n    \n    for (const patientAddress of patientList) {\n      const patient = await patientRegistry.patients(patientAddress);\n      const decryptedData = decryptData(patient.patientInfo, secretKey);\n\n      if (decryptedData && decryptedData.bloodType === criteria.bloodType) {\n        console.log(\"✅ Pacient găsit:\", decryptedData);\n        setFoundPatient({ address: patientAddress, ...decryptedData });\n        return;\n      }\n    }\n\n    console.warn(\"⚠️ Niciun pacient nu corespunde criteriului.\");\n  } catch (error) {\n    console.error(\"❌ Eroare la căutarea pacientului:\", error);\n  }\n};\n\n\n\n\n  useEffect(() => {\n    loadBlockchainData();\n  }, []);\n\n  const togglePop = (home) => {\n    setOrgan(home);\n    setToggle(!toggle);\n  };\n\n  return (\n    <div>\n      <Navigation account={account} setAccount={setAccount} />\n      <Search />\n\n      <div className=\"p-7 flex flex-col gap-y-6 items-center\">\n  <p className=\"text-4xl font-bold\">Organs For You</p>\n\n\n\n{account && organNFT && (\n  <div className=\"mt-5\">\n    <h3 className=\"text-xl font-bold\">Donate an Organ</h3>\n    <AddOrgan organNFT={organNFT} provider={provider} account={account} donorAddress={donorAddress} />\n  </div>\n)}\n\n\n      \n      {/* Buton pentru a adăuga pacienti */}\n      {account && (\n  <div>\n    <button\n      onClick={() => setShowForm(true)}\n      className=\"bg-green-500 text-white p-2 rounded-md\"\n    >\n      Add Patient\n    </button>\n\n    {showForm && (\n  <div className=\"mt-4 p-4 border rounded-lg bg-gray-100\">\n    <h3 className=\"text-lg font-bold mb-2\">Add New Patient</h3>\n    <form onSubmit={handleSubmit}>\n      {/* Adresa pacientului */}\n      <div className=\"mb-4\">\n        <label className=\"block text-sm font-medium mb-1\">Patient Address</label>\n        <input\n          type=\"text\"\n          name=\"address\"\n          value={patientData.address}\n          onChange={handleInputChange}\n          className=\"w-full p-2 border rounded-md\"\n          placeholder=\"Enter patient's address\"\n          required\n        />\n      </div>\n\n      {/* Numele pacientului */}\n      <div className=\"mb-4\">\n        <label className=\"block text-sm font-medium mb-1\">Name</label>\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={patientData.name}\n          onChange={handleInputChange}\n          className=\"w-full p-2 border rounded-md\"\n          placeholder=\"Enter patient's name\"\n          required\n        />\n      </div>\n\n      {/* Grupa sanguină */}\n      <div className=\"mb-4\">\n        <label className=\"block text-sm font-medium mb-1\">Blood Type</label>\n        <select\n          name=\"bloodType\"\n          value={patientData.bloodType}\n          onChange={handleInputChange}\n          className=\"w-full p-2 border rounded-md\"\n          required\n        >\n          <option value=\"\">Select blood type</option>\n          <option value=\"A+\">A+</option>\n          <option value=\"A-\">A-</option>\n          <option value=\"B+\">B+</option>\n          <option value=\"B-\">B-</option>\n          <option value=\"AB+\">AB+</option>\n          <option value=\"AB-\">AB-</option>\n          <option value=\"O+\">O+</option>\n          <option value=\"O-\">O-</option>\n        </select>\n      </div>\n\n      {/* Sexul pacientului */}\n      <div className=\"mb-4\">\n        <label className=\"block text-sm font-medium mb-1\">Sex</label>\n        <select\n          name=\"sex\"\n          value={patientData.sex}\n          onChange={handleInputChange}\n          className=\"w-full p-2 border rounded-md\"\n          required\n        >\n          <option value=\"\">Select sex</option>\n          <option value=\"Male\">Male</option>\n          <option value=\"Female\">Female</option>\n          <option value=\"Other\">Other</option>\n        </select>\n      </div>\n\n      {/* Vârsta pacientului */}\n      <div className=\"mb-4\">\n        <label className=\"block text-sm font-medium mb-1\">Age</label>\n        <input\n          type=\"number\"\n          name=\"age\"\n          value={patientData.age}\n          onChange={handleInputChange}\n          className=\"w-full p-2 border rounded-md\"\n          placeholder=\"Enter patient's age\"\n          required\n        />\n      </div>\n\n      {/* Butoane pentru trimitere și anulare */}\n      <div className=\"flex justify-end\">\n        <button\n          type=\"button\"\n          onClick={() => setShowForm(false)}\n          className=\"mr-2 bg-gray-500 text-white p-2 rounded-md\"\n        >\n          Cancel\n        </button>\n        <button\n          type=\"submit\"\n          className=\"bg-green-500 text-white p-2 rounded-md\"\n        >\n          Add Patient\n        </button>\n      </div>\n    </form>\n  </div>\n)}\n  </div>\n)}\n\n      \n\n<div className=\"mt-5\">\n  <h3 className=\"text-xl font-bold\">Patients List</h3>\n  <ul className=\"list-disc mt-2\">\n    {patients.length === 0 ? (\n      <li>No patients added yet.</li>\n    ) : (\n      patients.map((patientAddress, index) => (\n        <li key={index} className=\"flex items-center space-x-4\">\n          <p>{`${patientAddress.slice(0, 6)}...${patientAddress.slice(-4)}`}</p>\n          <button\n            onClick={() => fetchPatientData(patientAddress)}\n            className=\"bg-blue-500 text-white p-1 rounded-md text-sm\"\n          >\n            View Details\n          </button>\n        </li>\n      ))\n    )}\n  </ul>\n\n  {/* Afișează datele decriptate ale pacientului */}\n  <button\n  onClick={async () => {\n    if (!foundPatient) {\n      await findPatientByCriteria({ bloodType: \"B+\" });\n    }\n    if (foundPatient) {\n      alert(`Pacient găsit: ${foundPatient.name}, Adresă: ${foundPatient.address}`);\n    } else {\n      alert(\"Nu s-a găsit niciun pacient cu B+.\");\n    }\n  }}\n  className=\"bg-red-500 text-white p-2 rounded-md\"\n>\n  Find First B+ Patient\n</button>\n\n  {decryptedPatientData && (\n    <div className=\"mt-4 p-4 border rounded-lg bg-gray-100\">\n\n      <h3 className=\"text-lg font-bold mb-2\">Patient Details</h3>\n      <p><strong>Name:</strong> {decryptedPatientData.name}</p>\n      <p><strong>Blood Type:</strong> {decryptedPatientData.bloodType}</p>\n      <p><strong>Sex:</strong> {decryptedPatientData.sex}</p>\n      <p><strong>Age:</strong> {decryptedPatientData.age}</p>\n    </div>\n  )}\n</div>\n\n\n  <div className=\"p-7 flex flex-col gap-y-6 items-center\">\n  <p className=\"text-4xl font-bold\">Organs For You</p>\n  <div className=\"flex justify-center space-x-5 p-1\">\n    {!organs.length ? (\n      <p>Loading...</p>\n    ) : (\n      organs.map((organ, index) => (\n        organ && organ.attributes ? (\n          <div key={index} className=\"rounded-lg shadow-xl\" onClick={() => togglePop(organ)}>\n            <div>\n              <img src={organ.image || \"fallback.jpg\"} className=\"w-[350px] h-auto rounded-t-lg\" />\n            </div>\n            <div className=\"p-3\">\n              <p><strong>Organ:</strong> {organ.organ || \"N/A\"}</p>\n              <p><strong>Blood Type:</strong> {organ.BloodType || organ.attributes?.find(attr => attr.trait_type === \"Blood Type\")?.value || \"N/A\"}</p>\n              <p><strong>Description:</strong> {organ.description || \"No description\"}</p>\n              <p><strong>ID:</strong> {organ.id}</p>\n              \n              {/* Afișează toate atributele disponibile */}\n              <div className=\"mt-2\">\n                <strong>Attributes:</strong>\n                <ul>\n                  {organ.attributes.map((attr, i) => (\n                    <li key={i}>{attr.trait_type}: {attr.value}</li>\n                  ))}\n                </ul>\n              </div>\n            </div>\n          </div>\n        ) : null\n      ))\n    )}\n  </div>\n</div>\n\n\n      </div>\n\n      {toggle && (\n  <Home \n    organ={organ}  \n    provider={provider} \n    account={account} \n    escrow={escrow} \n    togglePop={togglePop} \n    organs={organs} \n    findPatientByCriteria={findPatientByCriteria} \n    foundPatient={foundPatient} // Pasăm pacientul găsit către Home\n  />\n)}\n\n\n\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}