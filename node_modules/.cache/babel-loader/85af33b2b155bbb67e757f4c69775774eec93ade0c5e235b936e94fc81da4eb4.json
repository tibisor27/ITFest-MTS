{"ast":null,"code":"var _jsxFileName = \"/Users/sebyboiciuc/Desktop/ITFest-MTS/src/components/AddOrgan.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport { v4 as uuidv4 } from 'uuid';\nimport { uploadToPinata } from \"../utils/pinata\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AddOrgan({\n  organNFT,\n  provider,\n  account,\n  donorAddress\n}) {\n  _s();\n  const [loading, setLoading] = useState(false);\n\n  // State pentru datele introduse de utilizator\n  const [organ, setOrgan] = useState(\"\");\n  const [bloodType, setBloodType] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [imageUrl, setImageUrl] = useState(\"\");\n  const handleAddOrgan = async () => {\n    if (!donorAddress) {\n      alert(\"Donor address not found!\");\n      return;\n    }\n    if (account.toLowerCase() !== donorAddress.toLowerCase()) {\n      alert(\"Numai donor-ul poate mina NFT-uri!\");\n      return;\n    }\n    setLoading(true);\n\n    // ðŸ”¹ CreÄƒm metadata NFT pe baza inputului utilizatorului\n    const nftData = {\n      organ,\n      bloodType,\n      description,\n      image: imageUrl,\n      // Link direct la imagine\n      id: `${uuidv4()}-${donorAddress}`,\n      attributes: [{\n        trait_type: \"Organ\",\n        value: organ\n      }, {\n        trait_type: \"Blood Type\",\n        value: bloodType\n      }]\n    };\n\n    // ðŸ”— ÃŽncÄƒrcÄƒm metadata pe IPFS\n    let ipfsUrl;\n    try {\n      ipfsUrl = await uploadToPinata(nftData);\n    } catch (error) {\n      console.error(\"Eroare la Ã®ncÄƒrcare pe IPFS:\", error);\n      alert(\"Eroare la Ã®ncÄƒrcare pe IPFS!\");\n      setLoading(false);\n      return;\n    }\n    if (!ipfsUrl) {\n      alert(\"ÃŽncÄƒrcarea pe IPFS a eÈ™uat!\");\n      setLoading(false);\n      return;\n    }\n    try {\n      const signer = provider.getSigner();\n      const organNFTWithSigner = organNFT.connect(signer);\n\n      // ðŸ”¥ Mint NFT cu metadata de pe IPFS\n      const mintTx = await organNFTWithSigner.mintOrganNFT(ipfsUrl);\n      await mintTx.wait();\n      alert(\"NFT mintat cu succes!\");\n    } catch (error) {\n      console.error(\"Eroare la minting:\", error);\n      alert(\"Minting failed!\");\n    }\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4 bg-white shadow-md rounded-md\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-semibold mb-3\",\n      children: \"Add Organ NFT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Organ\",\n      value: organ,\n      onChange: e => setOrgan(e.target.value),\n      className: \"w-full p-2 border rounded-md mb-2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Blood Type\",\n      value: bloodType,\n      onChange: e => setBloodType(e.target.value),\n      className: \"w-full p-2 border rounded-md mb-2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      placeholder: \"Description\",\n      value: description,\n      onChange: e => setDescription(e.target.value),\n      className: \"w-full p-2 border rounded-md mb-2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"IPFS Image URL\",\n      value: imageUrl,\n      onChange: e => setImageUrl(e.target.value),\n      className: \"w-full p-2 border rounded-md mb-2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddOrgan,\n      disabled: loading,\n      className: \"bg-blue-500 text-white p-2 rounded-md w-full\",\n      children: loading ? \"Minting...\" : \"Add Organ\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n_s(AddOrgan, \"5YAcHxdageFSwO6wd4JXXPfm3xk=\");\n_c = AddOrgan;\nvar _c;\n$RefreshReg$(_c, \"AddOrgan\");","map":{"version":3,"names":["useState","ethers","v4","uuidv4","uploadToPinata","jsxDEV","_jsxDEV","AddOrgan","organNFT","provider","account","donorAddress","_s","loading","setLoading","organ","setOrgan","bloodType","setBloodType","description","setDescription","imageUrl","setImageUrl","handleAddOrgan","alert","toLowerCase","nftData","image","id","attributes","trait_type","value","ipfsUrl","error","console","signer","getSigner","organNFTWithSigner","connect","mintTx","mintOrganNFT","wait","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","e","target","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/sebyboiciuc/Desktop/ITFest-MTS/src/components/AddOrgan.js"],"sourcesContent":["import { useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport { v4 as uuidv4 } from 'uuid';\nimport { uploadToPinata } from \"../utils/pinata\";\n\nexport default function AddOrgan({ organNFT, provider, account, donorAddress }) {\n  const [loading, setLoading] = useState(false);\n\n  // State pentru datele introduse de utilizator\n  const [organ, setOrgan] = useState(\"\");\n  const [bloodType, setBloodType] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [imageUrl, setImageUrl] = useState(\"\");\n\n  const handleAddOrgan = async () => {\n    if (!donorAddress) {\n      alert(\"Donor address not found!\");\n      return;\n    }\n    if (account.toLowerCase() !== donorAddress.toLowerCase()) {\n      alert(\"Numai donor-ul poate mina NFT-uri!\");\n      return;\n    }\n\n    setLoading(true);\n\n    // ðŸ”¹ CreÄƒm metadata NFT pe baza inputului utilizatorului\n    const nftData = {\n      organ,\n      bloodType,\n      description,\n      image: imageUrl, // Link direct la imagine\n      id: `${uuidv4()}-${donorAddress}`, \n      attributes: [\n        { trait_type: \"Organ\", value: organ },\n        { trait_type: \"Blood Type\", value: bloodType },\n      ],\n    };\n\n    // ðŸ”— ÃŽncÄƒrcÄƒm metadata pe IPFS\n    let ipfsUrl;\n    try {\n      ipfsUrl = await uploadToPinata(nftData);\n    } catch (error) {\n      console.error(\"Eroare la Ã®ncÄƒrcare pe IPFS:\", error);\n      alert(\"Eroare la Ã®ncÄƒrcare pe IPFS!\");\n      setLoading(false);\n      return;\n    }\n\n    if (!ipfsUrl) {\n      alert(\"ÃŽncÄƒrcarea pe IPFS a eÈ™uat!\");\n      setLoading(false);\n      return;\n    }\n\n    try {\n      const signer = provider.getSigner();\n      const organNFTWithSigner = organNFT.connect(signer);\n\n      // ðŸ”¥ Mint NFT cu metadata de pe IPFS\n      const mintTx = await organNFTWithSigner.mintOrganNFT(ipfsUrl);\n      await mintTx.wait();\n\n      alert(\"NFT mintat cu succes!\");\n    } catch (error) {\n      console.error(\"Eroare la minting:\", error);\n      alert(\"Minting failed!\");\n    }\n\n    setLoading(false);\n  };\n\n  return (\n    <div className=\"p-4 bg-white shadow-md rounded-md\">\n      <h2 className=\"text-xl font-semibold mb-3\">Add Organ NFT</h2>\n\n      <input\n        type=\"text\"\n        placeholder=\"Organ\"\n        value={organ}\n        onChange={(e) => setOrgan(e.target.value)}\n        className=\"w-full p-2 border rounded-md mb-2\"\n      />\n\n      <input\n        type=\"text\"\n        placeholder=\"Blood Type\"\n        value={bloodType}\n        onChange={(e) => setBloodType(e.target.value)}\n        className=\"w-full p-2 border rounded-md mb-2\"\n      />\n\n      <textarea\n        placeholder=\"Description\"\n        value={description}\n        onChange={(e) => setDescription(e.target.value)}\n        className=\"w-full p-2 border rounded-md mb-2\"\n      />\n\n      <input\n        type=\"text\"\n        placeholder=\"IPFS Image URL\"\n        value={imageUrl}\n        onChange={(e) => setImageUrl(e.target.value)}\n        className=\"w-full p-2 border rounded-md mb-2\"\n      />\n\n      <button\n        onClick={handleAddOrgan}\n        disabled={loading}\n        className=\"bg-blue-500 text-white p-2 rounded-md w-full\"\n      >\n        {loading ? \"Minting...\" : \"Add Organ\"}\n      </button>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}