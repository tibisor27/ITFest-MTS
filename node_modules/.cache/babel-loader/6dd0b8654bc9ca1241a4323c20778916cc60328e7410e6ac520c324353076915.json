{"ast":null,"code":"var _jsxFileName = \"/Users/sebyboiciuc/Desktop/hackaton/ITFest-MTS/src/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { ethers } from \"ethers\"; // AsigurƒÉ-te cƒÉ folose»ôti v5 corect instalat\nimport logo from \"./assets/logo1.png\";\nimport AddOrgan from \"./components/AddOrgan\";\nimport { uploadToPinata } from \"./utils/pinata\";\n\n// ABIs\nimport OrganNFT from \"./abis/OrganNFT.json\";\nimport OrganEscrow from \"./abis/OrganEscrow.json\";\nimport WaitingList from \"./abis/WaitingList.json\";\nimport PatientRegistry from './abis/PatientRegistry.json';\n\n// Config\nimport config from \"./config.json\";\nimport Navigation from \"./components/Navigation\";\nimport Search from \"./components/Search\";\nimport Home from \"./components/Home\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [account, setAccount] = useState(null);\n  const [provider, setProvider] = useState(null);\n  const [organNFT, setOrganNFT] = useState(null);\n  const [waitingList, setWaitingList] = useState(null);\n  const [escrow, setEscrow] = useState(null);\n  const [organs, setOrgans] = useState([]);\n  const [organ, setOrgan] = useState([]);\n  const [toggle, setToggle] = useState(false);\n  const [patientRegistry, setPatientRegistry] = useState(null);\n  const [patients, setPatients] = useState([]); // Lista pacien»õilor adƒÉuga»õi\n  const [donorAddress, setDonorAddress] = useState(null);\n  const [showForm, setShowForm] = useState(false); // Stare pentru a afi»ôa/ascunde formularul\n  const [patientData, setPatientData] = useState({\n    address: \"\",\n    name: \"\",\n    bloodType: \"\",\n    sex: \"\",\n    age: \"\"\n  });\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setPatientData(prevData => ({\n      ...prevData,\n      [name]: value\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    await addPatientHandler(patientData.address, patientData.info);\n    setShowForm(false); // Ascunde formularul dupƒÉ trimitere\n    setPatientData({\n      address: \"\",\n      info: \"\"\n    }); // ReseteazƒÉ formularul\n  };\n  const loadBlockchainData = async () => {\n    console.log(\"üöÄ loadBlockchainData called!\");\n    if (!window.ethereum) {\n      console.error(\"‚ùå MetaMask nu este instalat!\");\n      return;\n    }\n    try {\n      var _config$network$chain, _config$network$chain2;\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      await provider.send(\"eth_requestAccounts\", []);\n      const signer = provider.getSigner();\n      const account = await signer.getAddress();\n      setAccount(account);\n      setProvider(provider);\n      const network = await provider.getNetwork();\n      if (!config[network.chainId]) {\n        console.error(\"‚ùå Chain ID not found in config:\", network.chainId);\n        return;\n      }\n      window.ethereum.on('accountsChanged', async () => {\n        const accounts = await window.ethereum.request({\n          method: 'eth_requestAccounts'\n        });\n        const account = ethers.utils.getAddress(accounts[0]);\n        setAccount(account);\n      });\n      const organNFTAddress = (_config$network$chain = config[network.chainId]) === null || _config$network$chain === void 0 ? void 0 : (_config$network$chain2 = _config$network$chain.organNFT) === null || _config$network$chain2 === void 0 ? void 0 : _config$network$chain2.address;\n      if (!organNFTAddress) {\n        console.error(\"‚ùå Adresa OrganNFT este undefined! VerificƒÉ config.json\");\n        return;\n      }\n      const organNFT = new ethers.Contract(organNFTAddress, OrganNFT, signer);\n      setOrganNFT(organNFT);\n      const waitingList = new ethers.Contract(config[network.chainId].waitingList.address, WaitingList, provider);\n      const escrow = new ethers.Contract(config[network.chainId].escrow.address, OrganEscrow, provider);\n      const patientRegistry = new ethers.Contract(config[network.chainId].patientRegistry.address, PatientRegistry, provider);\n      setWaitingList(waitingList);\n      setEscrow(escrow);\n      setPatientRegistry(patientRegistry);\n      console.log(\"üìú Contracte ini»õializate!\");\n\n      // Fetch NFTs\n      const totalSupply = await organNFT.totalSupply();\n      console.log(\"üè¶ Total Supply:\", totalSupply.toString());\n      let fetchedOrgans = [];\n      for (let i = 1; i <= totalSupply; i++) {\n        const uri = await organNFT.tokenURI(i);\n        if (!uri.startsWith(\"http\")) continue;\n        try {\n          const response = await fetch(uri);\n          const metadata = await response.json();\n          fetchedOrgans.push(metadata);\n        } catch (error) {\n          console.error(\"‚ö†Ô∏è Eroare la √ÆncƒÉrcarea NFT:\", error);\n        }\n      }\n      setOrgans(fetchedOrgans);\n      console.log(\"‚úÖ Organs loaded:\", fetchedOrgans);\n\n      // Load patients\n      const patientList = await patientRegistry.getPatientList();\n      setPatients(patientList);\n      console.log(\"‚úÖ Patients loaded:\", patientList);\n\n      // üî• ApeleazƒÉ fetchDonorAddress DOAR dupƒÉ ce organNFT este setat!\n      await fetchDonorAddress(organNFT);\n    } catch (error) {\n      console.error(\"‚ùå Eroare √Æn loadBlockchainData:\", error);\n    }\n  };\n  const fetchDonorAddress = async organNFT => {\n    if (!organNFT) {\n      console.error(\"‚ùå organNFT nu este ini»õializat!\");\n      return;\n    }\n    try {\n      const totalSupply = await organNFT.totalSupply();\n      console.log(\"üè¶ Total NFT Supply:\", totalSupply.toString());\n      if (totalSupply > 0) {\n        const donor = await organNFT.getDonor(1); // ü©∏ Donor pentru primul NFT\n        setDonorAddress(donor);\n        console.log(\"üéó Donor Address setat:\", donor);\n      } else {\n        console.warn(\"‚ö†Ô∏è Nu existƒÉ NFT-uri, donorAddress rƒÉm√¢ne null.\");\n      }\n    } catch (error) {\n      console.error(\"‚ùå Eroare la ob»õinerea donorului:\", error);\n    }\n  };\n  const addPatientHandler = async (patientAddress, patientInfo) => {\n    if (!account) {\n      alert(\"Please connect your wallet.\");\n      return;\n    }\n    const doctorAddress = await patientRegistry.doctor();\n    if (account !== doctorAddress) {\n      alert(\"Only the doctor can add patients.\");\n      return;\n    }\n    if (!ethers.utils.isAddress(patientAddress)) {\n      alert(\"Invalid address.\");\n      return;\n    }\n    try {\n      const signer = provider.getSigner();\n      const patientRegistryWithSigner = patientRegistry.connect(signer);\n      const tx = await patientRegistryWithSigner.addPatient(patientAddress, patientInfo);\n      await tx.wait(); // üî• A»ôteptƒÉm confirmarea tranzac»õiei\n      alert(`Patient ${patientAddress} added successfully`);\n\n      // üõ† ActualizƒÉm manual lista pacien»õilor\n      const updatedPatients = await patientRegistry.getPatientList();\n      setPatients(updatedPatients); // üî• Acum pacien»õii sunt actualiza»õi √Æn interfa»õƒÉ\n    } catch (error) {\n      console.error(\"Error adding patient:\", error);\n      alert(\"Failed to add patient.\");\n    }\n  };\n  useEffect(() => {\n    loadBlockchainData();\n  }, []);\n  const togglePop = home => {\n    setOrgan(home);\n    setToggle(!toggle);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {\n      account: account,\n      setAccount: setAccount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-7 flex flex-col gap-y-6 items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-4xl font-bold\",\n        children: \"Organs For You\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 3\n      }, this), account && organNFT && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-xl font-bold\",\n          children: \"Donate an Organ\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(AddOrgan, {\n          organNFT: organNFT,\n          provider: provider,\n          account: account,\n          donorAddress: donorAddress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 3\n      }, this), account && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowForm(true),\n          className: \"bg-green-500 text-white p-2 rounded-md\",\n          children: \"Add Patient\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 5\n        }, this), showForm && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4 p-4 border rounded-lg bg-gray-100\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-bold mb-2\",\n            children: \"Add New Patient\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium mb-1\",\n                children: \"Patient Address\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"address\",\n                value: patientData.address,\n                onChange: handleInputChange,\n                className: \"w-full p-2 border rounded-md\",\n                placeholder: \"Enter patient's address\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium mb-1\",\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"name\",\n                value: patientData.name,\n                onChange: handleInputChange,\n                className: \"w-full p-2 border rounded-md\",\n                placeholder: \"Enter patient's name\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium mb-1\",\n                children: \"Blood Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                name: \"bloodType\",\n                value: patientData.bloodType,\n                onChange: handleInputChange,\n                className: \"w-full p-2 border rounded-md\",\n                required: true,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select blood type\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 299,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"A+\",\n                  children: \"A+\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 300,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"A-\",\n                  children: \"A-\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 301,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"B+\",\n                  children: \"B+\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 302,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"B-\",\n                  children: \"B-\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 303,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"AB+\",\n                  children: \"AB+\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 304,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"AB-\",\n                  children: \"AB-\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 305,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"O+\",\n                  children: \"O+\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 306,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"O-\",\n                  children: \"O-\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 307,\n                  columnNumber: 11\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium mb-1\",\n                children: \"Sex\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 313,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                name: \"sex\",\n                value: patientData.sex,\n                onChange: handleInputChange,\n                className: \"w-full p-2 border rounded-md\",\n                required: true,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select sex\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 321,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Male\",\n                  children: \"Male\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 322,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Female\",\n                  children: \"Female\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 323,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Other\",\n                  children: \"Other\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 324,\n                  columnNumber: 11\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium mb-1\",\n                children: \"Age\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                name: \"age\",\n                value: patientData.age,\n                onChange: handleInputChange,\n                className: \"w-full p-2 border rounded-md\",\n                placeholder: \"Enter patient's age\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 331,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-end\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: () => setShowForm(false),\n                className: \"mr-2 bg-gray-500 text-white p-2 rounded-md\",\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 344,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"bg-green-500 text-white p-2 rounded-md\",\n                children: \"Add Patient\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 351,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 7\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-xl font-bold\",\n          children: \"Patients List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"list-disc mt-2\",\n          children: patients.length === 0 ? /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"No patients added yet.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 9\n          }, this) : patients.map((patientAddress, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: `${patientAddress.slice(0, 6)}...${patientAddress.slice(-4)}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 13\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 11\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-7 flex flex-col gap-y-6 items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-4xl font-bold\",\n          children: \"Organs For You\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-center space-x-5 p-1\",\n          children: !organs.length ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 7\n          }, this) : organs.map((organ, index) => {\n            var _organ$attributes, _organ$attributes$fin;\n            return organ && organ.attributes ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"rounded-lg shadow-xl\",\n              onClick: () => togglePop(organ),\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: organ.image || \"fallback.jpg\",\n                  className: \"w-[350px] h-auto rounded-t-lg\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 391,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 390,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"p-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Organ:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 394,\n                    columnNumber: 18\n                  }, this), \" \", organ.organ || \"N/A\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 394,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Blood Type:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 395,\n                    columnNumber: 18\n                  }, this), \" \", organ.BloodType || ((_organ$attributes = organ.attributes) === null || _organ$attributes === void 0 ? void 0 : (_organ$attributes$fin = _organ$attributes.find(attr => attr.trait_type === \"Blood Type\")) === null || _organ$attributes$fin === void 0 ? void 0 : _organ$attributes$fin.value) || \"N/A\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 395,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Description:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 396,\n                    columnNumber: 18\n                  }, this), \" \", organ.description || \"No description\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 396,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"ID:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 397,\n                    columnNumber: 18\n                  }, this), \" \", organ.id]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 397,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mt-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Attributes:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 401,\n                    columnNumber: 17\n                  }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                    children: organ.attributes.map((attr, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n                      children: [attr.trait_type, \": \", attr.value]\n                    }, i, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 404,\n                      columnNumber: 21\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 402,\n                    columnNumber: 17\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 400,\n                  columnNumber: 15\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 393,\n                columnNumber: 13\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 11\n            }, this) : null;\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }, this), toggle && /*#__PURE__*/_jsxDEV(Home, {\n      organ: organ // üëà Trimitem organul selectat\n      ,\n      provider: provider,\n      account: account,\n      escrow: escrow,\n      togglePop: togglePop,\n      organs: organs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 229,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"cEGwftyCFE/BfGD1h0BkczDv5K0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","ethers","logo","AddOrgan","uploadToPinata","OrganNFT","OrganEscrow","WaitingList","PatientRegistry","config","Navigation","Search","Home","jsxDEV","_jsxDEV","App","_s","account","setAccount","provider","setProvider","organNFT","setOrganNFT","waitingList","setWaitingList","escrow","setEscrow","organs","setOrgans","organ","setOrgan","toggle","setToggle","patientRegistry","setPatientRegistry","patients","setPatients","donorAddress","setDonorAddress","showForm","setShowForm","patientData","setPatientData","address","name","bloodType","sex","age","handleInputChange","e","value","target","prevData","handleSubmit","preventDefault","addPatientHandler","info","loadBlockchainData","console","log","window","ethereum","error","_config$network$chain","_config$network$chain2","providers","Web3Provider","send","signer","getSigner","getAddress","network","getNetwork","chainId","on","accounts","request","method","utils","organNFTAddress","Contract","totalSupply","toString","fetchedOrgans","i","uri","tokenURI","startsWith","response","fetch","metadata","json","push","patientList","getPatientList","fetchDonorAddress","donor","getDonor","warn","patientAddress","patientInfo","alert","doctorAddress","doctor","isAddress","patientRegistryWithSigner","connect","tx","addPatient","wait","updatedPatients","togglePop","home","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","onSubmit","type","onChange","placeholder","required","length","map","index","slice","_organ$attributes","_organ$attributes$fin","attributes","src","image","BloodType","find","attr","trait_type","description","id","_c","$RefreshReg$"],"sources":["/Users/sebyboiciuc/Desktop/hackaton/ITFest-MTS/src/App.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { ethers } from \"ethers\"; // AsigurƒÉ-te cƒÉ folose»ôti v5 corect instalat\nimport logo from \"./assets/logo1.png\";\nimport AddOrgan from \"./components/AddOrgan\";\nimport { uploadToPinata } from \"./utils/pinata\";\n\n\n// ABIs\nimport OrganNFT from \"./abis/OrganNFT.json\";\nimport OrganEscrow from \"./abis/OrganEscrow.json\";\nimport WaitingList from \"./abis/WaitingList.json\";\nimport PatientRegistry from './abis/PatientRegistry.json';\n\n// Config\nimport config from \"./config.json\";\nimport Navigation from \"./components/Navigation\";\nimport Search from \"./components/Search\";\nimport Home from \"./components/Home\";\n\nfunction App() {\n  const [account, setAccount] = useState(null);\n  const [provider, setProvider] = useState(null);\n  const [organNFT, setOrganNFT] = useState(null);\n  const [waitingList, setWaitingList] = useState(null);\n  const [escrow, setEscrow] = useState(null);\n  const [organs, setOrgans] = useState([]);\n  const [organ, setOrgan] = useState([]);\n  const [toggle, setToggle] = useState(false);\n  const [patientRegistry, setPatientRegistry] = useState(null);\n  const [patients, setPatients] = useState([]); // Lista pacien»õilor adƒÉuga»õi\n  const [donorAddress, setDonorAddress] = useState(null);\n  const [showForm, setShowForm] = useState(false); // Stare pentru a afi»ôa/ascunde formularul\n  const [patientData, setPatientData] = useState({\n    address: \"\",\n    name: \"\",\n    bloodType: \"\",\n    sex: \"\",\n    age: \"\",\n  });\nconst handleInputChange = (e) => {\n  const { name, value } = e.target;\n  setPatientData((prevData) => ({\n    ...prevData,\n    [name]: value,\n  }));\n};\n\nconst handleSubmit = async (e) => {\n  e.preventDefault();\n  await addPatientHandler(patientData.address, patientData.info);\n  setShowForm(false); // Ascunde formularul dupƒÉ trimitere\n  setPatientData({ address: \"\", info: \"\" }); // ReseteazƒÉ formularul\n};\n\n\n  const loadBlockchainData = async () => {\n    console.log(\"üöÄ loadBlockchainData called!\");\n    \n    if (!window.ethereum) {\n      console.error(\"‚ùå MetaMask nu este instalat!\");\n      return;\n    }\n  \n    try {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      await provider.send(\"eth_requestAccounts\", []);\n      const signer = provider.getSigner();\n      const account = await signer.getAddress();\n  \n      setAccount(account);\n      setProvider(provider);\n  \n      const network = await provider.getNetwork();\n      if (!config[network.chainId]) {\n        console.error(\"‚ùå Chain ID not found in config:\", network.chainId);\n        return;\n      }\n  \n      window.ethereum.on('accountsChanged', async() => {\n        const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n        const account = ethers.utils.getAddress(accounts[0])\n        setAccount(account);\n      }); \n      \n      const organNFTAddress = config[network.chainId]?.organNFT?.address;\n      if (!organNFTAddress) {\n        console.error(\"‚ùå Adresa OrganNFT este undefined! VerificƒÉ config.json\");\n        return;\n      }\n  \n      const organNFT = new ethers.Contract(organNFTAddress, OrganNFT, signer);\n      setOrganNFT(organNFT);\n  \n      const waitingList = new ethers.Contract(\n        config[network.chainId].waitingList.address,\n        WaitingList,\n        provider\n      );\n  \n      const escrow = new ethers.Contract(\n        config[network.chainId].escrow.address,\n        OrganEscrow,\n        provider\n      );\n  \n      const patientRegistry = new ethers.Contract(\n        config[network.chainId].patientRegistry.address,\n        PatientRegistry,\n        provider\n      );\n  \n      setWaitingList(waitingList);\n      setEscrow(escrow);\n      setPatientRegistry(patientRegistry);\n  \n      console.log(\"üìú Contracte ini»õializate!\");\n  \n      // Fetch NFTs\n      const totalSupply = await organNFT.totalSupply();\n      console.log(\"üè¶ Total Supply:\", totalSupply.toString());\n  \n      let fetchedOrgans = [];\n      for (let i = 1; i <= totalSupply; i++) {\n        const uri = await organNFT.tokenURI(i);\n        if (!uri.startsWith(\"http\")) continue;\n        try {\n          const response = await fetch(uri);\n          const metadata = await response.json();\n          fetchedOrgans.push(metadata);\n        } catch (error) {\n          console.error(\"‚ö†Ô∏è Eroare la √ÆncƒÉrcarea NFT:\", error);\n        }\n      }\n  \n      setOrgans(fetchedOrgans);\n\n      console.log(\"‚úÖ Organs loaded:\", fetchedOrgans);\n  \n      // Load patients\n      const patientList = await patientRegistry.getPatientList();\n      setPatients(patientList);\n      console.log(\"‚úÖ Patients loaded:\", patientList);\n  \n      // üî• ApeleazƒÉ fetchDonorAddress DOAR dupƒÉ ce organNFT este setat!\n      await fetchDonorAddress(organNFT);\n  \n    } catch (error) {\n      console.error(\"‚ùå Eroare √Æn loadBlockchainData:\", error);\n    }\n  };\n  \n\n\n  const fetchDonorAddress = async (organNFT) => {\n    if (!organNFT) {\n      console.error(\"‚ùå organNFT nu este ini»õializat!\");\n      return;\n    }\n  \n    try {\n      const totalSupply = await organNFT.totalSupply();\n      console.log(\"üè¶ Total NFT Supply:\", totalSupply.toString());\n  \n      if (totalSupply > 0) {\n        const donor = await organNFT.getDonor(1); // ü©∏ Donor pentru primul NFT\n        setDonorAddress(donor);\n        console.log(\"üéó Donor Address setat:\", donor);\n      } else {\n        console.warn(\"‚ö†Ô∏è Nu existƒÉ NFT-uri, donorAddress rƒÉm√¢ne null.\");\n      }\n    } catch (error) {\n      console.error(\"‚ùå Eroare la ob»õinerea donorului:\", error);\n    }\n  };\n  \n\n\nconst addPatientHandler = async (patientAddress, patientInfo) => {\n  if (!account) {\n    alert(\"Please connect your wallet.\");\n    return;\n  }\n\n  const doctorAddress = await patientRegistry.doctor();\n  if (account !== doctorAddress) {\n    alert(\"Only the doctor can add patients.\");\n    return;\n  }\n\n  if (!ethers.utils.isAddress(patientAddress)) {\n    alert(\"Invalid address.\");\n    return;\n  }\n\n\n  try {\n    const signer = provider.getSigner();\n    const patientRegistryWithSigner = patientRegistry.connect(signer);\n\n    const tx = await patientRegistryWithSigner.addPatient(patientAddress, patientInfo);\n    await tx.wait(); // üî• A»ôteptƒÉm confirmarea tranzac»õiei\n    alert(`Patient ${patientAddress} added successfully`);\n\n    // üõ† ActualizƒÉm manual lista pacien»õilor\n    const updatedPatients = await patientRegistry.getPatientList();\n    setPatients(updatedPatients); // üî• Acum pacien»õii sunt actualiza»õi √Æn interfa»õƒÉ\n  } catch (error) {\n    console.error(\"Error adding patient:\", error);\n    alert(\"Failed to add patient.\");\n  }\n\n\n\n};\n\n\n\n\n  useEffect(() => {\n    loadBlockchainData();\n  }, []);\n\n  const togglePop = (home) => {\n    setOrgan(home);\n    setToggle(!toggle);\n  };\n\n  return (\n    <div>\n      <Navigation account={account} setAccount={setAccount} />\n      <Search />\n\n      <div className=\"p-7 flex flex-col gap-y-6 items-center\">\n  <p className=\"text-4xl font-bold\">Organs For You</p>\n\n\n\n{account && organNFT && (\n  <div className=\"mt-5\">\n    <h3 className=\"text-xl font-bold\">Donate an Organ</h3>\n    <AddOrgan organNFT={organNFT} provider={provider} account={account} donorAddress={donorAddress} />\n  </div>\n)}\n\n\n      \n      {/* Buton pentru a adƒÉuga pacienti */}\n      {account && (\n  <div>\n    <button\n      onClick={() => setShowForm(true)}\n      className=\"bg-green-500 text-white p-2 rounded-md\"\n    >\n      Add Patient\n    </button>\n\n    {showForm && (\n  <div className=\"mt-4 p-4 border rounded-lg bg-gray-100\">\n    <h3 className=\"text-lg font-bold mb-2\">Add New Patient</h3>\n    <form onSubmit={handleSubmit}>\n      {/* Adresa pacientului */}\n      <div className=\"mb-4\">\n        <label className=\"block text-sm font-medium mb-1\">Patient Address</label>\n        <input\n          type=\"text\"\n          name=\"address\"\n          value={patientData.address}\n          onChange={handleInputChange}\n          className=\"w-full p-2 border rounded-md\"\n          placeholder=\"Enter patient's address\"\n          required\n        />\n      </div>\n\n      {/* Numele pacientului */}\n      <div className=\"mb-4\">\n        <label className=\"block text-sm font-medium mb-1\">Name</label>\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={patientData.name}\n          onChange={handleInputChange}\n          className=\"w-full p-2 border rounded-md\"\n          placeholder=\"Enter patient's name\"\n          required\n        />\n      </div>\n\n      {/* Grupa sanguinƒÉ */}\n      <div className=\"mb-4\">\n        <label className=\"block text-sm font-medium mb-1\">Blood Type</label>\n        <select\n          name=\"bloodType\"\n          value={patientData.bloodType}\n          onChange={handleInputChange}\n          className=\"w-full p-2 border rounded-md\"\n          required\n        >\n          <option value=\"\">Select blood type</option>\n          <option value=\"A+\">A+</option>\n          <option value=\"A-\">A-</option>\n          <option value=\"B+\">B+</option>\n          <option value=\"B-\">B-</option>\n          <option value=\"AB+\">AB+</option>\n          <option value=\"AB-\">AB-</option>\n          <option value=\"O+\">O+</option>\n          <option value=\"O-\">O-</option>\n        </select>\n      </div>\n\n      {/* Sexul pacientului */}\n      <div className=\"mb-4\">\n        <label className=\"block text-sm font-medium mb-1\">Sex</label>\n        <select\n          name=\"sex\"\n          value={patientData.sex}\n          onChange={handleInputChange}\n          className=\"w-full p-2 border rounded-md\"\n          required\n        >\n          <option value=\"\">Select sex</option>\n          <option value=\"Male\">Male</option>\n          <option value=\"Female\">Female</option>\n          <option value=\"Other\">Other</option>\n        </select>\n      </div>\n\n      {/* V√¢rsta pacientului */}\n      <div className=\"mb-4\">\n        <label className=\"block text-sm font-medium mb-1\">Age</label>\n        <input\n          type=\"number\"\n          name=\"age\"\n          value={patientData.age}\n          onChange={handleInputChange}\n          className=\"w-full p-2 border rounded-md\"\n          placeholder=\"Enter patient's age\"\n          required\n        />\n      </div>\n\n      {/* Butoane pentru trimitere »ôi anulare */}\n      <div className=\"flex justify-end\">\n        <button\n          type=\"button\"\n          onClick={() => setShowForm(false)}\n          className=\"mr-2 bg-gray-500 text-white p-2 rounded-md\"\n        >\n          Cancel\n        </button>\n        <button\n          type=\"submit\"\n          className=\"bg-green-500 text-white p-2 rounded-md\"\n        >\n          Add Patient\n        </button>\n      </div>\n    </form>\n  </div>\n)}\n  </div>\n)}\n\n      \n\n<div className=\"mt-5\">\n    <h3 className=\"text-xl font-bold\">Patients List</h3>\n    <ul className=\"list-disc mt-2\">\n      {patients.length === 0 ? (\n        <li>No patients added yet.</li>\n      ) : (\n        patients.map((patientAddress, index) => (\n          <li key={index}>\n            <p>{`${patientAddress.slice(0, 6)}...${patientAddress.slice(-4)}`}</p>\n          </li>\n        ))\n      )}\n    </ul>\n  </div>\n\n  <div className=\"p-7 flex flex-col gap-y-6 items-center\">\n  <p className=\"text-4xl font-bold\">Organs For You</p>\n  <div className=\"flex justify-center space-x-5 p-1\">\n    {!organs.length ? (\n      <p>Loading...</p>\n    ) : (\n      organs.map((organ, index) => (\n        organ && organ.attributes ? (\n          <div key={index} className=\"rounded-lg shadow-xl\" onClick={() => togglePop(organ)}>\n            <div>\n              <img src={organ.image || \"fallback.jpg\"} className=\"w-[350px] h-auto rounded-t-lg\" />\n            </div>\n            <div className=\"p-3\">\n              <p><strong>Organ:</strong> {organ.organ || \"N/A\"}</p>\n              <p><strong>Blood Type:</strong> {organ.BloodType || organ.attributes?.find(attr => attr.trait_type === \"Blood Type\")?.value || \"N/A\"}</p>\n              <p><strong>Description:</strong> {organ.description || \"No description\"}</p>\n              <p><strong>ID:</strong> {organ.id}</p>\n              \n              {/* Afi»ôeazƒÉ toate atributele disponibile */}\n              <div className=\"mt-2\">\n                <strong>Attributes:</strong>\n                <ul>\n                  {organ.attributes.map((attr, i) => (\n                    <li key={i}>{attr.trait_type}: {attr.value}</li>\n                  ))}\n                </ul>\n              </div>\n            </div>\n          </div>\n        ) : null\n      ))\n    )}\n  </div>\n</div>\n\n\n      </div>\n\n      {toggle && (\n  <Home \n    organ={organ}  // üëà Trimitem organul selectat\n    provider={provider} \n    account={account} \n    escrow={escrow} \n    togglePop={togglePop} \n    organs={organs} \n  />\n)}\n\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}