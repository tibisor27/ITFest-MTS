{"ast":null,"code":"var _jsxFileName = \"/Users/sebyboiciuc/Desktop/ITFest-MTS/src/components/Home.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = ({\n  provider,\n  account,\n  escrow,\n  togglePop\n}) => {\n  _s();\n  const [organData, setOrganData] = useState(null);\n  useEffect(() => {\n    const savedData = localStorage.getItem(\"organData\");\n    if (savedData) {\n      try {\n        const parsedData = JSON.parse(savedData);\n        setOrganData(parsedData);\n      } catch (error) {\n        console.error(\"Eroare la parsarea datelor din localStorage:\", error);\n        localStorage.removeItem(\"organData\"); // Elimină datele corupte\n      }\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4 border rounded-md shadow-md\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-bold mb-4\",\n      children: \"Organ NFT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), organData ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Organ:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 14\n        }, this), \" \", organData.organ || \"N/A\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Blood Type:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 14\n        }, this), \" \", organData.bloodType || \"N/A\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Description:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 14\n        }, this), \" \", organData.description || \"N/A\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: organData.image || \"https://via.placeholder.com/150\",\n        alt: \"Organ\",\n        className: \"w-32 h-32 object-cover mt-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"IPFS:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 14\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: organData.ipfsUrl,\n          target: \"_blank\",\n          children: \"View on IPFS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 37\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No NFT data available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"UMaxDk94XdtWQu6R07D095D3bmU=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","Home","provider","account","escrow","togglePop","_s","organData","setOrganData","savedData","localStorage","getItem","parsedData","JSON","parse","error","console","removeItem","className","children","fileName","_jsxFileName","lineNumber","columnNumber","organ","bloodType","description","src","image","alt","href","ipfsUrl","target","_c","$RefreshReg$"],"sources":["/Users/sebyboiciuc/Desktop/ITFest-MTS/src/components/Home.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\n\nconst Home = ({ provider, account, escrow, togglePop }) => {\n  const [organData, setOrganData] = useState(null);\n\n  useEffect(() => {\n    const savedData = localStorage.getItem(\"organData\");\n    if (savedData) {\n      try {\n        const parsedData = JSON.parse(savedData);\n        setOrganData(parsedData);\n      } catch (error) {\n        console.error(\"Eroare la parsarea datelor din localStorage:\", error);\n        localStorage.removeItem(\"organData\"); // Elimină datele corupte\n      }\n    }\n  }, []);\n\n  return (\n    <div className=\"p-4 border rounded-md shadow-md\">\n      <h2 className=\"text-xl font-bold mb-4\">Organ NFT</h2>\n      {organData ? (\n        <div>\n          <p><strong>Organ:</strong> {organData.organ || \"N/A\"}</p>\n          <p><strong>Blood Type:</strong> {organData.bloodType || \"N/A\"}</p>\n          <p><strong>Description:</strong> {organData.description || \"N/A\"}</p>\n          <img\n            src={organData.image || \"https://via.placeholder.com/150\"}\n            alt=\"Organ\"\n            className=\"w-32 h-32 object-cover mt-2\"\n          />\n          <p><strong>IPFS:</strong> <a href={organData.ipfsUrl} target=\"_blank\">View on IPFS</a></p>\n        </div>\n      ) : (\n        <p>No NFT data available.</p>\n      )}\n    </div>\n  );\n};\n\nexport default Home;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}